presets:
- labels:
    preset-cluster-api-provider-vsphere-e2e-config: "true"
  env:
  - name: GOVC_URL
    valueFrom:
      secretKeyRef:
        name: capv-ci-overrides
        key: vsphere-server
  - name: GOVC_USERNAME
    valueFrom:
      secretKeyRef:
        name: capv-ci-overrides
        key: vsphere-username
  - name: GOVC_PASSWORD
    valueFrom:
      secretKeyRef:
        name: capv-ci-overrides
        key: vsphere-password
  - name: VM_SSH_PUB_KEY
    valueFrom:
      secretKeyRef:
        name: clusterapi-provider-vsphere-ci-prow
        key: vm-ssh-pub-key
  volumeMounts:
  - name: private-key
    mountPath: /root/ssh/.private-key
  - name: vpn-conf
    mountPath: /root/.openvpn
  - name: ipam-conf
    mountPath: /root/ipam-conf
  volumes:
  - name: private-key
    secret:
      secretName: clusterapi-provider-vsphere-ci-prow
      defaultMode: 256
      items:
      - key: vm-ssh-key
        path: private-key
  - name: vpn-conf
    secret:
      secretName: cluster-api-provider-vsphere-vpn-config
      defaultMode: 256
      items:
      - key: prow.ovpn
        path: prow.ovpn
      - key: client.crt
        path: client.crt
      - key: client.key
        path: client.key
      - key: ca.crt
        path: ca.crt
      - key: tls.key
        path: tls.key
  - name: ipam-conf
    secret:
      secretName: capv-ipam-kubeconfig
      defaultMode: 256
      items:
        - key: capv-services.conf
          path: capv-services.conf
- labels:
    preset-cluster-api-provider-vsphere-gcs-creds: "true"
  env:
  - name: GCR_KEY_FILE
    value: /root/.capv/keyfile.json
  volumes:
  - name: cluster-api-provider-vsphere-gcs-creds
    secret:
      secretName: cluster-api-provider-vsphere-gcs-prow
      items:
      - key: keyfile.json
        path: keyfile.json
        mode: 288
  volumeMounts:
  - name: cluster-api-provider-vsphere-gcs-creds
    mountPath: /root/.capv
    readOnly: true

presubmits:
  kubernetes-sigs/cluster-api-provider-vsphere:
  - name: pull-cluster-api-provider-vsphere-apidiff-main
    always_run: true
    optional: true
    decorate: true
    path_alias: sigs.k8s.io/cluster-api-provider-vsphere
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.23
          command:
          - hack/ci-apidiff.sh
    annotations:
      testgrid-dashboards: vmware-cluster-api-provider-vsphere, sig-cluster-lifecycle-cluster-api-provider-vsphere
      testgrid-tab-name: pr-apidiff
      testgrid-alert-email: k8s-testing-clusterapi-vsphere+alerts@groups.vmware.com
      description: Checks for API changes in the PR

  - name: pull-cluster-api-provider-vsphere-verify-lint
    always_run: false
    run_if_changed: '^((api|cmd|config|contrib|controllers|pkg)/|Makefile|hack/check-lint\.sh)'
    decorate: true
    path_alias: sigs.k8s.io/cluster-api-provider-vsphere
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.23
        command:
        - hack/check-lint.sh
    annotations:
      testgrid-dashboards: vmware-cluster-api-provider-vsphere, sig-cluster-lifecycle-cluster-api-provider-vsphere
      testgrid-tab-name: pr-verify-lint
      testgrid-alert-email: k8s-testing-clusterapi-vsphere+alerts@groups.vmware.com
      description: Verifies the Golang sources are linted

  - name: pull-cluster-api-provider-vsphere-verify-markdown
    always_run: false
    run_if_changed: '.*\.md$'
    decorate: true
    path_alias: sigs.k8s.io/cluster-api-provider-vsphere
    spec:
      containers:
      - image: gcr.io/cluster-api-provider-vsphere/extra/mdlint:0.17.0
        command:
        - /nodejs/bin/node
        args:
        - /md/lint
        - -i
        - vendor
        - -i
        - contrib/haproxy/openapi
        - .
    annotations:
      testgrid-dashboards: vmware-cluster-api-provider-vsphere, sig-cluster-lifecycle-cluster-api-provider-vsphere
      testgrid-tab-name: pr-verify-markdown
      testgrid-alert-email: k8s-testing-clusterapi-vsphere+alerts@groups.vmware.com
      description: Verifies the markdown has been linted

  - name: pull-cluster-api-provider-vsphere-verify-shell
    always_run: false
    run_if_changed: '.*\.\w*sh$'
    decorate: true
    path_alias: sigs.k8s.io/cluster-api-provider-vsphere
    spec:
      containers:
      - image: gcr.io/cluster-api-provider-vsphere/extra/shellcheck:v0.6.0
        command:
        - /bin/shellcheck.sh
    annotations:
      testgrid-dashboards: vmware-cluster-api-provider-vsphere, sig-cluster-lifecycle-cluster-api-provider-vsphere
      testgrid-tab-name: pr-verify-shell
      testgrid-alert-email: k8s-testing-clusterapi-vsphere+alerts@groups.vmware.com
      description: Verifies the shell scripts have been linted

  - name: pull-cluster-api-provider-vsphere-verify-crds
    always_run: false
    run_if_changed: '^((api|cmd|config|contrib|controllers|pkg)/|Makefile|hack/verify-crds\.sh|go\.mod|go\.sum)'
    decorate: true
    path_alias: sigs.k8s.io/cluster-api-provider-vsphere
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.23
        command:
        - hack/verify-crds.sh
    annotations:
      testgrid-dashboards: vmware-cluster-api-provider-vsphere, sig-cluster-lifecycle-cluster-api-provider-vsphere
      testgrid-tab-name: pr-verify-crds
      testgrid-alert-email: k8s-testing-clusterapi-vsphere+alerts@groups.vmware.com
      description: Verifies the CRDs have been updated

  - name: pull-cluster-api-provider-vsphere-test
    always_run: false
    run_if_changed: '^((api|cmd|config|contrib|controllers|pkg|test)/|Makefile|go\.mod|go\.sum)'
    decorate: true
    path_alias: sigs.k8s.io/cluster-api-provider-vsphere
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.23
        resources:
          requests:
            cpu: "500m"
        command:
        - runner.sh
        args:
        - make
        - test
    annotations:
      testgrid-dashboards: vmware-cluster-api-provider-vsphere, sig-cluster-lifecycle-cluster-api-provider-vsphere
      testgrid-tab-name: pr-test
      testgrid-alert-email: k8s-testing-clusterapi-vsphere+alerts@groups.vmware.com
      description: Runs unit tests

  - name: pull-cluster-api-provider-vsphere-integration-test
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    always_run: false
    run_if_changed: '^((api|cmd|config|contrib|controllers|pkg|test)/|Makefile|go\.mod|go\.sum)'
    decorate: true
    path_alias: sigs.k8s.io/cluster-api-provider-vsphere
    branches:
    - ^main$
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.23
          # we need privileged mode in order to do docker in docker
          securityContext:
            privileged: true
            capabilities:
              add: ["NET_ADMIN"]
          resources:
            requests:
              cpu: "4000m"
              memory: "6Gi"
          command:
            - runner.sh
          args:
            - make
            - test-integration
    annotations:
      testgrid-dashboards: vmware-cluster-api-provider-vsphere, sig-cluster-lifecycle-cluster-api-provider-vsphere
      testgrid-tab-name: pr-test-integration
      testgrid-alert-email: k8s-testing-clusterapi-vsphere+alerts@groups.vmware.com
      description: Runs integration tests

  - name: pull-cluster-api-provider-vsphere-e2e
    branches:
      - ^main$
      - ^release-1.*
    labels:
      preset-dind-enabled: "true"
      preset-cluster-api-provider-vsphere-e2e-config: "true"
      preset-cluster-api-provider-vsphere-gcs-creds: "true"
      preset-kind-volume-mounts: "true"
    always_run: false
    run_if_changed: '^((api|cmd|config|contrib|controllers|packaging|pkg|test)/|Dockerfile|Makefile|hack/e2e\.sh|go\.mod|go\.sum)'
    decorate: true
    path_alias: sigs.k8s.io/cluster-api-provider-vsphere
    max_concurrency: 3
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.23
        command:
        - runner.sh
        args:
        - ./hack/e2e.sh
        env:
        - name: GINKGO_FOCUS
          value: "\\[PR-Blocking\\]"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
          capabilities:
            add: ["NET_ADMIN"]
        resources:
          requests:
            cpu: "4000m"
            memory: "6Gi"
    annotations:
      testgrid-dashboards: vmware-cluster-api-provider-vsphere, sig-cluster-lifecycle-cluster-api-provider-vsphere
      testgrid-tab-name: pr-e2e
      testgrid-alert-email: k8s-testing-clusterapi-vsphere+alerts@groups.vmware.com
      description: Runs e2e tests

  - name: pull-cluster-api-provider-vsphere-e2e-v1alpha
    branches:
      - ^release-0.7$
      - ^release-0.8$
    labels:
      preset-dind-enabled: "true"
      preset-cluster-api-provider-vsphere-e2e-config: "true"
      preset-cluster-api-provider-vsphere-gcs-creds: "true"
      preset-kind-volume-mounts: "true"
    always_run: false
    run_if_changed: '^((api|cmd|config|contrib|controllers|packaging|pkg|test)/|Dockerfile|Makefile|hack/e2e\.sh|go\.mod|go\.sum)'
    decorate: true
    path_alias: sigs.k8s.io/cluster-api-provider-vsphere
    max_concurrency: 3
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.23
          command:
            - runner.sh
          args:
            - ./hack/e2e.sh
          # we need privileged mode in order to do docker in docker
          securityContext:
            privileged: true
            capabilities:
              add: ["NET_ADMIN"]
          resources:
            requests:
              cpu: "4000m"
              memory: "6Gi"
    annotations:
      testgrid-dashboards: vmware-cluster-api-provider-vsphere, sig-cluster-lifecycle-cluster-api-provider-vsphere
      testgrid-tab-name: pr-e2e-v1alpha
      testgrid-alert-email: k8s-testing-clusterapi-vsphere+alerts@groups.vmware.com
      description: Runs e2e tests for v1alpha3 and v1alpha4 types
