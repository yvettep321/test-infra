presets:
- labels:
    preset-capz-windows-common-main: "true"
  env:
  - name: "KUBERNETES_VERSION"
    value: "latest"
  - name: E2E_ARGS
    value: "-kubetest.use-ci-artifacts"
  - name: WINDOWS
    value: "true"
  - name: AZURE_NODE_MACHINE_TYPE
    value: "Standard_D4s_v3"
- labels:
    preset-capz-windows-parallel: "true"
  env:
  # Windows isn't really conformance, we typically run at 4 to keep the time reasonable (~45 mins)
  - name: CONFORMANCE_NODES
    value: "4"
- labels:
    preset-capz-windows-2019: "true"
  env:
  - name: WINDOWS_FLAVOR
    value: "containerd"
- labels:
    preset-capz-windows-2022: "true"
  env:
  - name: WINDOWS_FLAVOR
    value: "containerd-2022"
- labels:
    preset-capz-containerd-latest: "true"
  env:
  - name: WINDOWS_CONTAINERD_URL
    value: "https://github.com/containerd/containerd/releases/download/v1.6.8/containerd-1.6.8-windows-amd64.tar.gz"
- labels:
    preset-capz-serial-slow: "true"
  env:
  - name: KUBETEST_WINDOWS_CONFIG
    value: "upstream-windows-serial-slow.yaml"
  # capz scripts use confromance nodes for ginkgo nodes (working on migration away from these)
  - name: CONFORMANCE_NODES
    value: "1"
  # windows-test scripts use this
  - name: GINKGO_NODES
    value: "1"
- labels:
    preset-capz-windows-ci-entrypoint-common-main: "true"
    # https://capz.sigs.k8s.io/developers/development.html#running-custom-test-suites-on-capz-clusters
  env:
    - name: KUBERNETES_VERSION
      value: "latest"
    - name: NODE_MACHINE_TYPE
      value: "Standard_D4s_v3"
    - name: TEST_WINDOWS
      value: "true"
- labels:
    preset-capz-windows-azuredisk: "true"
  env:
    - name: WINDOWS_USE_HOST_PROCESS_CONTAINERS
      value: "true"
    - name: DISABLE_ZONE
      value: "true"
    - name: WORKER_MACHINE_COUNT
      value: 0 # Don't create linux worker nodes
- labels:
    preset-capz-windows-azurefile: "true"
  env:
    - name: WINDOWS_USE_HOST_PROCESS_CONTAINERS
      value: "true"
    - name: WORKER_MACHINE_COUNT
      value: 0 # Don't create linux worker nodes
periodics:
- name: ci-kubernetes-e2e-capz-master-containerd-windows
  interval: 3h
  decorate: true
  decoration_config:
    timeout: 4h
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
    preset-azure-cred-only: "true"
    preset-capz-windows-common-main: "true"
    preset-capz-windows-2019: "true"
    preset-capz-containerd-latest: "true"
    preset-capz-windows-parallel: "true"
  extra_refs:
  - org: kubernetes-sigs
    repo: cluster-api-provider-azure
    base_ref: main
    path_alias: sigs.k8s.io/cluster-api-provider-azure
  spec:
    containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
        command:
          - "runner.sh"
          - "./scripts/ci-conformance.sh"
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 2
            memory: "9Gi"
  annotations:
    fork-per-release: "true"
    testgrid-alert-email: kubernetes-provider-azure@googlegroups.com, sig-windows-leads@kubernetes.io
    testgrid-dashboards: sig-release-master-informing, sig-windows-master-release, sig-windows-signal
    testgrid-tab-name: capz-windows-containerd-master
- name: ci-kubernetes-e2e-capz-master-containerd-windows-serial-slow
  interval: 24h
  decorate: true
  decoration_config:
    timeout: 4h
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
    preset-azure-cred-only: "true"
    preset-capz-windows-common-main: "true"
    preset-capz-windows-2019: "true"
    preset-capz-containerd-latest: "true"
    preset-capz-serial-slow: "true"
  extra_refs:
  - org: kubernetes-sigs
    repo: cluster-api-provider-azure
    base_ref: main
    path_alias: sigs.k8s.io/cluster-api-provider-azure
  spec:
    containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
        command:
          - "runner.sh"
          - "./scripts/ci-conformance.sh"
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 2
            memory: "9Gi"
  annotations:
    testgrid-alert-email: kubernetes-provider-azure@googlegroups.com, sig-windows-leads@kubernetes.io
    testgrid-dashboards: sig-windows-master-release, sig-windows-signal
    testgrid-tab-name: capz-windows-containerd-master-serial-slow
- name: ci-kubernetes-e2e-capz-master-containerd-windows-2022
  interval: 3h
  decorate: true
  decoration_config:
    timeout: 4h
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
    preset-azure-cred-only: "true"
    preset-windows-private-registry-cred: "true"
    preset-capz-windows-common-main: "true"
    preset-capz-containerd-latest: "true"
  extra_refs:
  - org: kubernetes-sigs
    repo: cluster-api-provider-azure
    base_ref: main
    path_alias: sigs.k8s.io/cluster-api-provider-azure
  - org: kubernetes-sigs
    repo: windows-testing
    base_ref: master
    path_alias: k8s.io/windows-testing
    workdir: true
  spec:
    containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
        command:
          - "runner.sh"
          - "./capz/run-capz-e2e.sh"
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 2
            memory: "9Gi"
        env:
          - name: WINDOWS_SERVER_VERSION
            value: "windows-2022"
  annotations:
    testgrid-alert-email: kubernetes-provider-azure@googlegroups.com, sig-windows-leads@kubernetes.io
    testgrid-dashboards: sig-windows-master-release
    testgrid-tab-name: capz-windows-containerd-2022-master
- name: ci-kubernetes-e2e-capz-master-containerd-windows-2022-serial-slow
  interval: 24h
  decorate: true
  decoration_config:
    timeout: 4h
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
    preset-azure-cred-only: "true"
    preset-windows-private-registry-cred: "true"
    preset-capz-windows-common-main: "true"
    preset-capz-containerd-latest: "true"
    preset-capz-serial-slow: "true"
  extra_refs:
  - org: kubernetes-sigs
    repo: cluster-api-provider-azure
    base_ref: main
    path_alias: sigs.k8s.io/cluster-api-provider-azure
  - org: kubernetes-sigs
    repo: windows-testing
    base_ref: master
    path_alias: k8s.io/windows-testing
    workdir: true
  spec:
    containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
        command:
          - "runner.sh"
          - "./capz/run-capz-e2e.sh"
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 2
            memory: "9Gi"
        env:
          - name: WINDOWS_SERVER_VERSION
            value: "windows-2022"
          - name: GINKGO_FOCUS
            value: (\[sig-windows\]|\[sig-scheduling\].SchedulerPreemption|\[sig-autoscaling\].\[Feature:HPA\]|\[sig-apps\].CronJob).*(\[Serial\]|\[Slow\])|(\[Serial\]|\[Slow\]).*(\[Conformance\]|\[NodeConformance\])|\[sig-api-machinery\].Garbage.collector
          - name: GINKGO_SKIP
            value: \[LinuxOnly\]|device.plugin.for.Windows|RebootHost
  annotations:
    testgrid-alert-email: kubernetes-provider-azure@googlegroups.com, sig-windows-leads@kubernetes.io
    testgrid-dashboards: sig-windows-master-release
    testgrid-tab-name: capz-windows-containerd-2022-master-serial-slow
- name: ci-kubernetes-e2e-azuredisk-capz-windows-2019
  interval: 48h
  decorate: true
  decoration_config:
    timeout: 2h
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
    preset-azure-cred-only: "true"
    preset-azure-anonymous-pull: "true"
    preset-capz-windows-ci-entrypoint-common-main: "true"
    preset-capz-windows-azuredisk: "true"
  extra_refs:
  - org: kubernetes-sigs
    repo: cluster-api-provider-azure
    base_ref: main
    path_alias: sigs.k8s.io/cluster-api-provider-azure
    workdir: true
  - org: kubernetes-sigs
    repo: azuredisk-csi-driver
    base_ref: master
    path_alias: sigs.k8s.io/azuredisk-csi-driver
  spec:
    containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
        command:
          - runner.sh
          - ./scripts/ci-entrypoint.sh
        args:
          - bash
          - -c
          - >-
            cd ${GOPATH}/src/sigs.k8s.io/azuredisk-csi-driver &&
            make e2e-test
        securityContext:
          privileged: true
  annotations:
    testgrid-dashboards: sig-windows-master-release
    testgrid-tab-name: capz-azuredisk-windows-2019
    testgrid-alert-email: kubernetes-provider-azure@googlegroups.com, sig-windows-leads@kubernetes.io
    description: Run Azure Disk e2e test in a CAPZ cluster on Windows 2019 nodes
# disabling while job is debugged
# - name: ci-kubernetes-e2e-azurefile-capz-windows-2019
#   interval: 48h
#   decorate: true
#   decoration_config:
#     timeout: 2h
#   labels:
#     preset-dind-enabled: "true"
#     preset-kind-volume-mounts: "true"
#     preset-azure-cred-only: "true"
#     preset-azure-anonymous-pull: "true"
#     preset-capz-windows-ci-entrypoint-common-main: "true"
#     preset-capz-windows-azuredisk: "true"
#   extra_refs:
#   - org: kubernetes-sigs
#     repo: cluster-api-provider-azure
#     base_ref: main
#     path_alias: sigs.k8s.io/cluster-api-provider-azure
#     workdir: true
#   - org: kubernetes-sigs
#     repo: azurefile-csi-driver
#     base_ref: master
#     path_alias: sigs.k8s.io/azurefile-csi-driver
#   spec:
#     containers:
#       - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
#         command:
#           - runner.sh
#           - ./scripts/ci-entrypoint.sh
#         args:
#           - bash
#           - -c
#           - >-
#             cd ${GOPATH}/src/sigs.k8s.io/azurefile-csi-driver &&
#             make e2e-test
#         securityContext:
#           privileged: true
#   annotations:
#     testgrid-dashboards: sig-windows-master-release
#     testgrid-tab-name: capz-azurefile-windows-2019
#     testgrid-alert-email: kubernetes-provider-azure@googlegroups.com, sig-windows-leads@kubernetes.io
#     description: Run Azure File e2e test in a CAPZ cluster on Windows 2019 nodes
- name: ci-kubernetes-e2e-capz-master-containerd-nightly-windows
  interval: 24h
  decorate: true
  decoration_config:
    timeout: 4h
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
    preset-azure-cred-only: "true"
    preset-windows-private-registry-cred: "true"
    preset-capz-windows-common-main: "true"
  extra_refs:
  - org: kubernetes-sigs
    repo: cluster-api-provider-azure
    base_ref: main
    path_alias: sigs.k8s.io/cluster-api-provider-azure
  - org: kubernetes-sigs
    repo: windows-testing
    base_ref: master
    path_alias: k8s.io/windows-testing
    workdir: true
  spec:
    containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
        command:
          - "runner.sh"
          - "./capz/run-capz-e2e.sh"
        env:
          - name: WINDOWS_CONTAINERD_URL
            value: "https://github.com/kubernetes-sigs/sig-windows-tools/releases/download/windows-containerd-nightly/windows-containerd.tar.gz"
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 2
            memory: "9Gi"
  annotations:
    testgrid-alert-email: kubernetes-provider-azure@googlegroups.com, sig-windows-leads@kubernetes.io
    testgrid-dashboards: sig-windows-master-release, sig-windows-signal
    testgrid-tab-name: capz-windows-containerd-nightly-master
