# generated by ./config/jobs/kubernetes-sigs/sig-windows/generate-presubmits.sh.
presubmits:
  kubernetes/kubernetes:
  - name: pull-kubernetes-e2e-aks-engine-windows-containerd-1-24
    always_run: false
    optional: true
    decorate: true
    decoration_config:
      timeout: 3h
    path_alias: k8s.io/kubernetes
    branches:
    - release-1.24
    labels:
      preset-service-account: "true"
      preset-azure-cred: "true"
      preset-azure-windows: "true"
      preset-windows-repo-list-master: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-windows-private-registry-cred: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
        - runner.sh
        - kubetest
        args:
        # Generic e2e test args
        - --test
        - --up
        - --down
        - --build=quick
        - --dump=$(ARTIFACTS)
        # Azure-specific test args
        - --deployment=aksengine
        - --provider=skeleton
        - --aksengine-admin-username=azureuser
        - --aksengine-admin-password=AdminPassw0rd
        - --aksengine-creds=$(AZURE_CREDENTIALS)
        - --aksengine-download-url=https://aka.ms/aks-engine/aks-engine-k8s-e2e.tar.gz
        - --aksengine-public-key=$(K8S_SSH_PUBLIC_KEY_PATH)
        - --aksengine-private-key=$(K8S_SSH_PRIVATE_KEY_PATH)
        - --aksengine-winZipBuildScript=$(WIN_BUILD)
        - --aksengine-orchestratorRelease=1.24
        - --aksengine-template-url=https://raw.githubusercontent.com/kubernetes-sigs/windows-testing/master/job-templates/kubernetes_containerd_1_24.json
        - --aksengine-win-binaries
        - --aksengine-deploy-custom-k8s
        - --aksengine-agentpoolcount=2
        # Specific test args
        - --test_args=--node-os-distro=windows --docker-config-file=$(DOCKER_CONFIG_FILE) -prepull-images=true --ginkgo.focus=\[Conformance\]|\[NodeConformance\]|\[sig-windows\]|\[sig-apps\].CronJob|\[sig-api-machinery\].ResourceQuota|\[sig-network\].EndpointSlice --ginkgo.skip=\[LinuxOnly\]|\[Serial\]|\[Slow\]|\[alpha\]|GMSA|Guestbook.application.should.create.and.stop.a.working.application|device.plugin.for.Windows
        - --ginkgo-parallel=4
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-windows-presubmit
      testgrid-tab-name: pull-kubernetes-e2e-aks-engine-windows-containerd-1.24
      testgrid-num-columns-recent: '30'
  - name: pull-kubernetes-e2e-capz-windows-containerd-1-24
    decorate: true
    always_run: false
    optional: true
    run_if_changed: 'azure.*\.go$|.*windows\.go$|test/e2e/windows/.*'
    path_alias: k8s.io/kubernetes
    branches:
      - release-1.24
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-cred-only: "true"
      preset-azure-anonymous-pull: "true"
      preset-capz-windows-2019: "true"
      preset-capz-containerd-latest: "true"
      preset-capz-windows-common-pull: "true"
    extra_refs:
    - org: kubernetes-sigs
      repo: cluster-api-provider-azure
      base_ref: main
      path_alias: sigs.k8s.io/cluster-api-provider-azure
      workdir: true
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
        - runner.sh
        - ./scripts/ci-conformance.sh
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 2
            memory: "9Gi"
    annotations:
      testgrid-dashboards: sig-windows-presubmit
      testgrid-tab-name: pull-kubernetes-e2e-capz-windows-containerd-1.24
      testgrid-num-columns-recent: '30'
  - name: pull-kubernetes-e2e-aks-engine-azure-disk-windows-containerd-1-24
    decorate: true
    decoration_config:
      timeout: 2h
    always_run: false
    optional: true
    path_alias: k8s.io/kubernetes
    branches:
      - release-1.24
    labels:
      preset-service-account: "true"
      preset-azure-cred: "true"
      preset-azure-windows: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
    extra_refs:
    - org: kubernetes-sigs
      repo: azuredisk-csi-driver
      base_ref: master
      path_alias: sigs.k8s.io/azuredisk-csi-driver
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
        - runner.sh
        - kubetest
        args:
        # Generic e2e test args
        - --test
        - --up
        - --down
        - --build=quick
        - --dump=$(ARTIFACTS)
        # Azure-specific test args
        - --deployment=aksengine
        - --provider=skeleton
        - --aksengine-admin-username=azureuser
        - --aksengine-admin-password=AdminPassw0rd
        - --aksengine-creds=$(AZURE_CREDENTIALS)
        - --aksengine-download-url=https://aka.ms/aks-engine/aks-engine-k8s-e2e.tar.gz
        - --aksengine-public-key=$(K8S_SSH_PUBLIC_KEY_PATH)
        - --aksengine-private-key=$(K8S_SSH_PRIVATE_KEY_PATH)
        - --aksengine-winZipBuildScript=$(WIN_BUILD)
        - --aksengine-orchestratorRelease=1.24
        - --aksengine-template-url=https://raw.githubusercontent.com/kubernetes-sigs/windows-testing/master/job-templates/kubernetes_containerd_1_24_csi_enabled.json
        - --aksengine-win-binaries
        - --aksengine-deploy-custom-k8s
        - --aksengine-agentpoolcount=2
        # Specific test args
        - --test-azure-disk-csi-driver
        securityContext:
          privileged: true
        env:
        - name: AZURE_STORAGE_DRIVER
          value: "kubernetes.io/azure-disk" # In-tree Azure disk storage class
        - name: TEST_WINDOWS
          value: "true"
    annotations:
      testgrid-dashboards: sig-windows-presubmit
      testgrid-tab-name: pull-kubernetes-e2e-aks-engine-azure-disk-windows-containerd-1-24
      description: Run Azure Disk e2e test with Azure Disk in-tree volume plugin in a Windows cluster with containerd runtime.
  - name: pull-kubernetes-e2e-aks-engine-azure-file-windows-containerd-1-24
    decorate: true
    decoration_config:
      timeout: 2h
    always_run: false
    optional: true
    path_alias: k8s.io/kubernetes
    branches:
      - release-1.24
    labels:
      preset-service-account: "true"
      preset-azure-cred: "true"
      preset-azure-windows: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
    extra_refs:
    - org: kubernetes-sigs
      repo: azurefile-csi-driver
      base_ref: master
      path_alias: sigs.k8s.io/azurefile-csi-driver
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
        - runner.sh
        - kubetest
        args:
        # Generic e2e test args
        - --test
        - --up
        - --down
        - --build=quick
        - --dump=$(ARTIFACTS)
        # Azure-specific test args
        - --deployment=aksengine
        - --provider=skeleton
        - --aksengine-admin-username=azureuser
        - --aksengine-admin-password=AdminPassw0rd
        - --aksengine-creds=$(AZURE_CREDENTIALS)
        - --aksengine-download-url=https://aka.ms/aks-engine/aks-engine-k8s-e2e.tar.gz
        - --aksengine-public-key=$(K8S_SSH_PUBLIC_KEY_PATH)
        - --aksengine-private-key=$(K8S_SSH_PRIVATE_KEY_PATH)
        - --aksengine-winZipBuildScript=$(WIN_BUILD)
        - --aksengine-orchestratorRelease=1.24
        - --aksengine-template-url=https://raw.githubusercontent.com/kubernetes-sigs/windows-testing/master/job-templates/kubernetes_containerd_1_24_csi_enabled.json
        - --aksengine-win-binaries
        - --aksengine-deploy-custom-k8s
        - --aksengine-agentpoolcount=2
        # Specific test args
        - --test-azure-file-csi-driver
        securityContext:
          privileged: true
        env:
        - name: AZURE_STORAGE_DRIVER
          value: "kubernetes.io/azure-file" # In-tree Azure file storage class
        - name: TEST_WINDOWS
          value: "true"
    annotations:
      testgrid-dashboards: sig-windows-presubmit
      testgrid-tab-name: pull-kubernetes-e2e-aks-engine-azure-file-windows-containerd-1.24
      description: Run Azure File e2e test with Azure File in-tree volume plugin in a Windows cluster with containerd runtime
