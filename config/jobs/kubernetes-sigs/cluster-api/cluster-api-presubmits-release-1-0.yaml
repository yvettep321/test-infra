presubmits:
  kubernetes-sigs/cluster-api:
  - name: pull-cluster-api-build-release-1-0
    decorate: true
    decoration_config:
      gcs_credentials_secret: "" # Use workload identity for uploading artifacts
    path_alias: sigs.k8s.io/cluster-api
    always_run: true
    branches:
    # The script this job runs is not in all branches.
    - ^release-1.0$
    spec:
      serviceAccountName: prowjob-default-sa
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.22
        command:
        - runner.sh
        - ./scripts/ci-build.sh
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-1.0
      testgrid-tab-name: capi-pr-build-release-1-0
  - name: pull-cluster-api-make-release-1-0
    decorate: true
    decoration_config:
      gcs_credentials_secret: "" # Use workload identity for uploading artifacts
    path_alias: sigs.k8s.io/cluster-api
    always_run: false
    optional: true
    labels:
      preset-dind-enabled: "true"
    branches:
    # The script this job runs is not in all branches.
    - ^release-1.0$
    spec:
      serviceAccountName: prowjob-default-sa
      containers:
      - command:
        - runner.sh
        - ./scripts/ci-make.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.22
        resources:
          requests:
            cpu: 7300m
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-1.0
      testgrid-tab-name: capi-pr-make-release-1-0
  - name: pull-cluster-api-apidiff-release-1-0
    decorate: true
    decoration_config:
      gcs_credentials_secret: "" # Use workload identity for uploading artifacts
    path_alias: sigs.k8s.io/cluster-api
    always_run: true
    optional: true
    branches:
    # The script this job runs is not in all branches.
    - ^release-1.0$
    spec:
      serviceAccountName: prowjob-default-sa
      containers:
      - command:
        - runner.sh
        - ./scripts/ci-apidiff.sh
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.22
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-1.0
      testgrid-tab-name: capi-pr-apidiff-release-1-0
  - name: pull-cluster-api-verify-release-1-0
    decorate: true
    decoration_config:
      gcs_credentials_secret: "" # Use workload identity for uploading artifacts
    path_alias: sigs.k8s.io/cluster-api
    always_run: true
    branches:
    # The script this job runs is not in all branches.
    - ^release-1.0$
    spec:
      serviceAccountName: prowjob-default-sa
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.22
        command:
        - "runner.sh"
        - ./scripts/ci-verify.sh
        resources:
          requests:
            cpu: 7300m
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-1.0
      testgrid-tab-name: capi-pr-verify-release-1-0
  - name: pull-cluster-api-test-release-1-0
    decorate: true
    decoration_config:
      gcs_credentials_secret: "" # Use workload identity for uploading artifacts
    path_alias: sigs.k8s.io/cluster-api
    always_run: true
    branches:
    # The script this job runs is not in all branches.
    - ^release-1.0$
    spec:
      serviceAccountName: prowjob-default-sa
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.22
        args:
        - runner.sh
        - ./scripts/ci-test.sh
        resources:
          requests:
            cpu: 7300m
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-1.0
      testgrid-tab-name: capi-pr-test-release-1-0
  - name: pull-cluster-api-test-mink8s-release-1-0
    decorate: true
    decoration_config:
      gcs_credentials_secret: "" # Use workload identity for uploading artifacts
    path_alias: sigs.k8s.io/cluster-api
    always_run: true
    branches:
    # The script this job runs is not in all branches.
    - ^release-1.0$
    spec:
      serviceAccountName: prowjob-default-sa
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.22
        args:
        - runner.sh
        - ./scripts/ci-test.sh
        env:
        # This value determines the minimum Kubernetes
        # supported version for Cluster API management cluster.
        #
        # To check the available envtest in Kubebuilder, please
        # refer to https://github.com/kubernetes-sigs/kubebuilder/tree/tools-releases.
        - name: KUBEBUILDER_ENVTEST_KUBERNETES_VERSION
          value: "1.19.2"
        resources:
          requests:
            cpu: 7300m
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-1.0
      testgrid-tab-name: capi-pr-test-mink8s-release-1-0
  - name: pull-cluster-api-e2e-release-1-0
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    decorate: true
    decoration_config:
      gcs_credentials_secret: "" # Use workload identity for uploading artifacts
    branches:
    # The script this job runs is not in all branches.
    - ^release-1.0$
    path_alias: sigs.k8s.io/cluster-api
    run_if_changed: '^((api|bootstrap|cmd|config|controllers|controlplane|errors|exp|feature|hack|internal|scripts|test|third_party|util|webhooks|version)/|main\.go|go\.mod|go\.sum|Dockerfile|Makefile)'
    spec:
      serviceAccountName: prowjob-default-sa
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.22
        args:
          - runner.sh
          - "./scripts/ci-e2e.sh"
        env:
          - name: GINKGO_FOCUS
            value: "\\[PR-Blocking\\]"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 7300m
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-1.0
      testgrid-tab-name: capi-pr-e2e-release-1-0
  - name: pull-cluster-api-e2e-ipv6-release-1-0
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    decorate: true
    decoration_config:
      gcs_credentials_secret: "" # Use workload identity for uploading artifacts
    optional: true
    branches:
    # The script this job runs is not in all branches.
    - ^release-1.0$
    path_alias: sigs.k8s.io/cluster-api
    run_if_changed: '^((api|bootstrap|cmd|config|controllers|controlplane|errors|exp|feature|hack|internal|scripts|test|third_party|util|webhooks|version)/|main\.go|go\.mod|go\.sum|Dockerfile|Makefile)'
    spec:
      serviceAccountName: prowjob-default-sa
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.22
        args:
          - runner.sh
          - "./scripts/ci-e2e.sh"
        env:
          # enable IPV6 in bootstrap image
          - name: "DOCKER_IN_DOCKER_IPV6_ENABLED"
            value: "true"
          - name: GINKGO_FOCUS
            value: "\\[PR-Blocking\\]"
          - name: IP_FAMILY
            value: "IPv6"
          - name: DOCKER_SERVICE_CIDRS
            value: "fd00:100:64::/108"
          - name: DOCKER_POD_CIDRS
            value: "fd00:100:96::/48"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 7300m
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-1.0
      testgrid-tab-name: capi-pr-e2e-release-1-0-ipv6
  - name: pull-cluster-api-e2e-full-release-1-0
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    decorate: true
    decoration_config:
      gcs_credentials_secret: "" # Use workload identity for uploading artifacts
    optional: true
    always_run: false
    branches:
    # The script this job runs is not in all branches.
    - ^release-1.0$
    path_alias: sigs.k8s.io/cluster-api
    spec:
      serviceAccountName: prowjob-default-sa
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.22
        args:
          - runner.sh
          - "./scripts/ci-e2e.sh"
        env:
          # Since the PR-Blocking tests are run as part of the cluster-api-test-release-1-0 job
          # and the upgrade tests are being run as part of the periodic upgrade jobs.
          # This jobs ends up running all the other tests in the E2E suite
          - name: GINKGO_SKIP
            value: "\\[PR-Blocking\\] \\[Conformance\\] \\[K8s-Upgrade\\]"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 7300m
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-1.0
      testgrid-tab-name: capi-pr-e2e-full-release-1-0
  - name: pull-cluster-api-e2e-workload-upgrade-1-23-latest-release-1-0
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    decorate: true
    decoration_config:
      gcs_credentials_secret: "" # Use workload identity for uploading artifacts
    optional: true
    always_run: false
    branches:
    # The script this job runs is not in all branches.
    - ^release-1.0$
    path_alias: sigs.k8s.io/cluster-api
    extra_refs:
    - org: kubernetes
      repo: kubernetes
      base_ref: master
      path_alias: k8s.io/kubernetes
    spec:
      serviceAccountName: prowjob-default-sa
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.22
        args:
          - runner.sh
          - "./scripts/ci-e2e.sh"
        env:
          - name: KUBERNETES_VERSION_UPGRADE_FROM
            value: "stable-1.23"
          - name: KUBERNETES_VERSION_UPGRADE_TO
            value: "ci/latest-1.24"
          - name: ETCD_VERSION_UPGRADE_TO
            value: "3.5.3-0"
          - name: COREDNS_VERSION_UPGRADE_TO
            value: "v1.8.6"
          - name: GINKGO_FOCUS
            value: "\\[K8s-Upgrade\\]"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 7300m
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-1.0
      testgrid-tab-name: capi-pr-e2e-release-1-0-1-23-latest
