presubmits:
  kubernetes-sigs/secrets-store-csi-driver:
  - name: pull-secrets-store-csi-driver-lint
    decorate: true
    decoration_config:
      timeout: 10m
    always_run: true
    path_alias: sigs.k8s.io/secrets-store-csi-driver
    branches:
    - ^main$
    - ^release-*
    labels:
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - make
          - test-style
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-presubmit
      testgrid-tab-name: pr-secrets-store-csi-driver-lint
      description: "Run linting rules for Secrets Store CSI driver."
      testgrid-num-columns-recent: '30'
  - name: pull-secrets-store-csi-driver-unit
    decorate: true
    decoration_config:
      timeout: 10m
    always_run: true
    path_alias: sigs.k8s.io/secrets-store-csi-driver
    branches:
    - ^main$
    - ^release-*
    labels:
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - make
          - test
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-presubmit
      testgrid-tab-name: pr-secrets-store-csi-driver-unit
      description: "Run unit tests for Secrets Store CSI driver."
      testgrid-num-columns-recent: '30'
  - name: pull-secrets-store-csi-driver-sanity
    decorate: true
    decoration_config:
      timeout: 10m
    always_run: true
    path_alias: sigs.k8s.io/secrets-store-csi-driver
    branches:
    - ^main$
    - ^release-*
    labels:
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - make
          - sanity-test
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-presubmit
      testgrid-tab-name: pr-secrets-store-csi-driver-sanity
      description: "Run sanity tests for Secrets Store CSI driver."
      testgrid-num-columns-recent: '30'
  - name: pull-secrets-store-csi-driver-image-scan
    cluster: k8s-infra-prow-build
    decorate: true
    decoration_config:
      timeout: 10m
    always_run: true
    optional: true
    path_alias: sigs.k8s.io/secrets-store-csi-driver
    branches:
    - ^main$
    - ^release-*
    labels:
      preset-dind-enabled: "true"
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
          command:
            - runner.sh
          args:
            - bash
            - -c
            - >-
              make container image-scan
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: "4"
              memory: "4Gi"
            limits:
              cpu: "4"
              memory: "4Gi"
    annotations:
      testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-presubmit
      testgrid-tab-name: pr-secrets-store-csi-driver-image-scan
      description: "Run vulnerability scans for Secrets Store CSI driver images."
      testgrid-num-columns-recent: '30'
  - name: pull-secrets-store-csi-driver-e2e-vault
    decorate: true
    decoration_config:
      timeout: 25m
    always_run: true
    path_alias: sigs.k8s.io/secrets-store-csi-driver
    branches:
    - ^main$
    - ^release-*
    labels:
      # this is required because we want to run kind in docker
      preset-dind-enabled: "true"
      # this is required to make CNI installation to succeed for kind
      preset-kind-volume-mounts: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - bash
          - -c
          - >-
            make e2e-bootstrap e2e-helm-deploy e2e-vault
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-presubmit
      testgrid-tab-name: pr-secrets-store-csi-driver-e2e-vault
      description: "Run e2e test with vault provider for Secrets Store CSI driver."
      testgrid-num-columns-recent: '30'
  - name: pull-secrets-store-csi-driver-e2e-azure
    decorate: true
    decoration_config:
      timeout: 25m
    always_run: true
    path_alias: sigs.k8s.io/secrets-store-csi-driver
    branches:
    - ^main$
    - ^release-*
    labels:
      # this is required because we want to run kind in docker
      preset-dind-enabled: "true"
      # this is required to make CNI installation to succeed for kind
      preset-kind-volume-mounts: "true"
      # sets up the azure keyvault parameters used for testing
      preset-azure-secrets-store-creds: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - bash
          - -c
          - >-
            make e2e-bootstrap e2e-helm-deploy e2e-azure
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: "4"
            memory: "4Gi"
    annotations:
      testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-presubmit
      testgrid-tab-name: pr-secrets-store-csi-driver-e2e-azure
      description: "Run e2e test with azure provider for Secrets Store CSI driver."
      testgrid-num-columns-recent: '30'
  - name: pull-secrets-store-csi-driver-e2e-deploy-manifest-azure
    decorate: true
    decoration_config:
      timeout: 25m
    always_run: true
    optional: true
    path_alias: sigs.k8s.io/secrets-store-csi-driver
    branches:
    - ^main$
    labels:
      # this is required because we want to run kind in docker
      preset-dind-enabled: "true"
      # this is required to make CNI installation to succeed for kind
      preset-kind-volume-mounts: "true"
      # sets up the azure keyvault parameters used for testing
      preset-azure-secrets-store-creds: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - bash
          - -c
          - >-
            IS_YAML_TEST=true make e2e-bootstrap e2e-deploy-manifest e2e-azure
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: "4"
            memory: "4Gi"
    annotations:
      testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-presubmit
      testgrid-tab-name: pr-secrets-store-csi-driver-e2e-deploy-manifest-azure
      description: "Run e2e test using deploy manifest with azure provider for Secrets Store CSI driver."
      testgrid-num-columns-recent: '30'
  - name: pull-secrets-store-csi-driver-e2e-windows
    decorate: true
    decoration_config:
      timeout: 90m
    always_run: true
    path_alias: sigs.k8s.io/secrets-store-csi-driver
    optional: false
    branches:
    - ^main$
    - ^release-*
    labels:
      preset-azure-cred: "true"
      preset-azure-windows: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-azure-secrets-store-creds: "true"
    extra_refs:
    - org: kubernetes
      repo: kubernetes
      base_ref: master
      path_alias: k8s.io/kubernetes
      workdir: true
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
          - kubetest
        args:
          - --test
          - --up
          - --down
          - --build=quick
          - --dump=$(ARTIFACTS)
          - --provider=skeleton
          - --deployment=aksengine
          - --aksengine-admin-username=azureuser
          - --aksengine-creds=$(AZURE_CREDENTIALS)
          - --aksengine-orchestratorRelease=1.23
          - --aksengine-public-key=$(K8S_SSH_PUBLIC_KEY_PATH)
          - --aksengine-private-key=$(K8S_SSH_PRIVATE_KEY_PATH)
          - --aksengine-template-url=https://raw.githubusercontent.com/kubernetes-sigs/secrets-store-csi-driver/main/test/bats/tests/azure/job_templates/kubernetes_windows.json
          - --aksengine-download-url=https://aka.ms/aks-engine/aks-engine-k8s-e2e.tar.gz
          - --test-secrets-store-csi-driver
        securityContext:
          privileged: true
        env:
          - name: TEST_WINDOWS
            value: "true"
        resources:
          requests:
            cpu: "4"
            memory: "6Gi"
    annotations:
      testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-presubmit
      testgrid-tab-name: pr-secrets-store-csi-driver-e2e-windows
      description: "Run E2E tests on a Windows cluster for Secrets Store CSI driver."
      testgrid-num-columns-recent: '30'
  - name: pull-secrets-store-csi-driver-e2e-gcp
    decorate: true
    decoration_config:
      timeout: 25m
    always_run: true
    path_alias: sigs.k8s.io/secrets-store-csi-driver
    branches:
    - ^main$
    - ^release-*
    labels:
      # this is required because we want to run kind in docker
      preset-dind-enabled: "true"
      # this is required to make CNI installation to succeed for kind
      preset-kind-volume-mounts: "true"
    spec:
      serviceAccountName: secrets-store-csi-driver-gcp
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - bash
          - -c
          - >-
            make e2e-bootstrap e2e-helm-deploy e2e-gcp
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: "4"
            memory: "4Gi"
    annotations:
      testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-presubmit
      testgrid-tab-name: pr-secrets-store-csi-driver-e2e-gcp
      description: "Run e2e test with gcp provider for Secrets Store CSI driver."
      testgrid-num-columns-recent: '30'
  - name: pull-secrets-store-csi-driver-e2e-aws
    decorate: true
    decoration_config:
      timeout: 1h
    always_run: true
    optional: true
    path_alias: sigs.k8s.io/secrets-store-csi-driver
    branches:
    - ^main$
    - ^release-*
    labels:
      # this is required because we want to run kind in docker
      preset-dind-enabled: "true"
      # this is required to make CNI installation to succeed for kind
      preset-kind-volume-mounts: "true"
      # Sets up the aws parameters used for testing
      preset-aws-credential-aws-oss-testing: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - bash
          - -c
          - >-
            make setup-eks-cluster e2e-aws e2e-eks-cleanup
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: "4"
            memory: "6Gi"
    annotations:
      testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-presubmit
      testgrid-tab-name: pr-secrets-store-csi-driver-e2e-aws
      description: "Run e2e test with aws provider for Secrets Store CSI driver."
      testgrid-num-columns-recent: '30'
  - name: pull-secrets-store-csi-driver-build
    decorate: true
    decoration_config:
      timeout: 10m
    always_run: true
    path_alias: sigs.k8s.io/secrets-store-csi-driver
    branches:
    - ^main$
    - ^release-*
    labels:
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - bash
          - -c
          - >-
            make build build-windows
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-presubmit
      testgrid-tab-name: pr-secrets-store-csi-driver-build
      description: "Run make build build-windows for Secrets Store CSI driver."
      testgrid-num-columns-recent: '30'
  - name: pull-secrets-store-csi-driver-e2e-provider-k8s-1-22-9
    decorate: true
    decoration_config:
      timeout: 25m
    always_run: true
    optional: false
    path_alias: sigs.k8s.io/secrets-store-csi-driver
    branches:
    - ^main$
    # e2e-provider is only available in release-1.* branches
    - ^release-1.*
    labels:
      # this is required because we want to run kind in docker
      preset-dind-enabled: "true"
      # this is required to make CNI installation to succeed for kind
      preset-kind-volume-mounts: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - bash
          - -c
          - >-
            ./test/scripts/e2e_provider.sh
        securityContext:
          privileged: true
        env:
        - name: KUBERNETES_VERSION
          value: "1.22.9"
        resources:
          requests:
            cpu: "4"
            memory: "4Gi"
    annotations:
      testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-presubmit
      testgrid-tab-name: pr-secrets-store-csi-driver-e2e-provider-k8s-1-22-9
      description: "Run e2e test with e2e-provider for Secrets Store CSI driver in Kubernetes 1.22.9"
      testgrid-num-columns-recent: '30'
  - name: pull-secrets-store-csi-driver-e2e-provider-k8s-1-23-6
    decorate: true
    decoration_config:
      timeout: 25m
    always_run: true
    optional: false
    path_alias: sigs.k8s.io/secrets-store-csi-driver
    branches:
    - ^main$
    # e2e-provider is only available in release-1.* branches
    - ^release-1.*
    labels:
      # this is required because we want to run kind in docker
      preset-dind-enabled: "true"
      # this is required to make CNI installation to succeed for kind
      preset-kind-volume-mounts: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - bash
          - -c
          - >-
            ./test/scripts/e2e_provider.sh
        securityContext:
          privileged: true
        env:
        - name: KUBERNETES_VERSION
          value: "1.23.6"
        resources:
          requests:
            cpu: "4"
            memory: "4Gi"
    annotations:
      testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-presubmit
      testgrid-tab-name: pr-secrets-store-csi-driver-e2e-provider-k8s-1-23-6
      description: "Run e2e test with e2e-provider for Secrets Store CSI driver in Kubernetes 1.23.6"
      testgrid-num-columns-recent: '30'
  - name: pull-secrets-store-csi-driver-e2e-provider-k8s-1-24-2
    decorate: true
    decoration_config:
      timeout: 25m
    always_run: true
    optional: false
    path_alias: sigs.k8s.io/secrets-store-csi-driver
    branches:
    - ^main$
    # e2e-provider is only available in release-1.* branches
    - ^release-1.*
    labels:
      # this is required because we want to run kind in docker
      preset-dind-enabled: "true"
      # this is required to make CNI installation to succeed for kind
      preset-kind-volume-mounts: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - bash
          - -c
          - >-
            ./test/scripts/e2e_provider.sh
        securityContext:
          privileged: true
        env:
        - name: KUBERNETES_VERSION
          value: "1.24.2"
        resources:
          requests:
            cpu: "4"
            memory: "4Gi"
    annotations:
      testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-presubmit
      testgrid-tab-name: pr-secrets-store-csi-driver-e2e-provider-k8s-1-24-2
      description: "Run e2e test with e2e-provider for Secrets Store CSI driver in Kubernetes 1.24.2"
      testgrid-num-columns-recent: '30'
  - name: pull-secrets-store-csi-driver-e2e-akeyless
    decorate: true
    decoration_config:
      timeout: 1h
    always_run: false
    optional: true
    path_alias: sigs.k8s.io/secrets-store-csi-driver
    branches:
    - ^main$
    - ^release-*
    labels:
      # this is required because we want to run kind in docker
      preset-dind-enabled: "true"
      # this is required to make CNI installation to succeed for kind
      preset-kind-volume-mounts: "true"
      # Sets up the akeyless parameters used for testing
      preset-akeyless-secrets-store-creds: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - bash
          - -c
          - >-
            make e2e-bootstrap e2e-helm-deploy e2e-akeyless
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: "4"
            memory: "4Gi"
    annotations:
      testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-presubmit
      testgrid-tab-name: pr-secrets-store-csi-driver-e2e-akeyless
      description: "Run e2e test with akeyless provider for Secrets Store CSI driver."
      testgrid-num-columns-recent: '30'

  # release jobs
  - name: release-secrets-store-csi-driver-e2e-aws
    decorate: true
    decoration_config:
      timeout: 1h
    always_run: false
    run_if_changed: "^charts/.*"
    optional: true
    path_alias: sigs.k8s.io/secrets-store-csi-driver
    branches:
    - ^main$
    - ^release-*
    labels:
      # this is required because we want to run kind in docker
      preset-dind-enabled: "true"
      # this is required to make CNI installation to succeed for kind
      preset-kind-volume-mounts: "true"
      # sets up the aws parameters used for testing
      preset-aws-credential-aws-oss-testing: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - bash
          - -c
          - >-
            make setup-eks-cluster e2e-helm-deploy-release e2e-aws e2e-eks-cleanup
        securityContext:
          privileged: true
        env:
          - name: RELEASE
            value: "true"
        resources:
          requests:
            cpu: "4"
            memory: "6Gi"
    annotations:
      testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-release-signal
      testgrid-tab-name: release-secrets-store-csi-driver-e2e-aws
      description: "Run e2e test with aws provider for Secrets Store CSI driver release."
      testgrid-num-columns-recent: '30'

  - name: release-secrets-store-csi-driver-e2e-vault
    decorate: true
    decoration_config:
      timeout: 25m
    always_run: false
    run_if_changed: "^charts/.*"
    path_alias: sigs.k8s.io/secrets-store-csi-driver
    branches:
    - ^main$
    - ^release-*
    labels:
      # this is required because we want to run kind in docker
      preset-dind-enabled: "true"
      # this is required to make CNI installation to succeed for kind
      preset-kind-volume-mounts: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - bash
          - -c
          - >-
            make e2e-bootstrap e2e-helm-deploy-release e2e-vault
        securityContext:
          privileged: true
        env:
          - name: RELEASE
            value: "true"
        resources:
          requests:
            cpu: "4"
            memory: "4Gi"
    annotations:
      testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-release-signal
      testgrid-tab-name: release-secrets-store-csi-driver-e2e-vault
      description: "Run e2e test with vault provider for Secrets Store CSI driver release."
      testgrid-num-columns-recent: '30'
  - name: release-secrets-store-csi-driver-e2e-azure
    decorate: true
    decoration_config:
      timeout: 25m
    always_run: false
    run_if_changed: "^charts/.*"
    path_alias: sigs.k8s.io/secrets-store-csi-driver
    branches:
    - ^main$
    - ^release-*
    labels:
      # this is required because we want to run kind in docker
      preset-dind-enabled: "true"
      # this is required to make CNI installation to succeed for kind
      preset-kind-volume-mounts: "true"
      # sets up the azure keyvault parameters used for testing
      preset-azure-secrets-store-creds: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - bash
          - -c
          - >-
            make e2e-bootstrap e2e-helm-deploy-release e2e-azure
        securityContext:
          privileged: true
        env:
          - name: RELEASE
            value: "true"
        resources:
          requests:
            cpu: "4"
            memory: "4Gi"
    annotations:
      testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-release-signal
      testgrid-tab-name: release-secrets-store-csi-driver-e2e-azure
      description: "Run e2e test with azure provider for Secrets Store CSI driver release."
      testgrid-num-columns-recent: '30'
  - name: release-secrets-store-csi-driver-e2e-gcp
    decorate: true
    decoration_config:
      timeout: 25m
    always_run: false
    run_if_changed: "^charts/.*"
    path_alias: sigs.k8s.io/secrets-store-csi-driver
    branches:
    - ^main$
    - ^release-*
    labels:
      # this is required because we want to run kind in docker
      preset-dind-enabled: "true"
      # this is required to make CNI installation to succeed for kind
      preset-kind-volume-mounts: "true"
    spec:
      serviceAccountName: secrets-store-csi-driver-gcp
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - bash
          - -c
          - >-
            make e2e-bootstrap e2e-helm-deploy-release e2e-gcp
        securityContext:
          privileged: true
        env:
          - name: RELEASE
            value: "true"
        resources:
          requests:
            cpu: "4"
            memory: "4Gi"
    annotations:
      testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-release-signal
      testgrid-tab-name: release-secrets-store-csi-driver-e2e-gcp
      description: "Run e2e test with gcp provider for Secrets Store CSI driver release."
      testgrid-num-columns-recent: '30'

postsubmits:
  kubernetes-sigs/secrets-store-csi-driver:
  - name: secrets-store-csi-driver-e2e-vault-postsubmit
    decorate: true
    decoration_config:
      timeout: 25m
    always_run: true
    path_alias: sigs.k8s.io/secrets-store-csi-driver
    branches:
    - ^main$
    labels:
      # this is required because we want to run kind in docker
      preset-dind-enabled: "true"
      # this is required to make CNI installation to succeed for kind
      preset-kind-volume-mounts: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - bash
          - -c
          - >-
            make e2e-bootstrap e2e-helm-deploy e2e-vault
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: "4"
            memory: "4Gi"
    annotations:
      testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-postsubmit
      testgrid-tab-name: secrets-store-csi-driver-e2e-vault-postsubmit
      description: "Run e2e test with vault provider for Secrets Store CSI driver postsubmit"
      testgrid-num-columns-recent: '30'
    rerun_auth_config:
      github_users:
      - aramase
      - ritazh
  - name: secrets-store-csi-driver-e2e-azure-postsubmit
    decorate: true
    decoration_config:
      timeout: 25m
    always_run: true
    path_alias: sigs.k8s.io/secrets-store-csi-driver
    branches:
    - ^main$
    labels:
      # this is required because we want to run kind in docker
      preset-dind-enabled: "true"
      # this is required to make CNI installation to succeed for kind
      preset-kind-volume-mounts: "true"
      # sets up the azure keyvault parameters used for testing
      preset-azure-secrets-store-creds: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - bash
          - -c
          - >-
            make e2e-bootstrap e2e-helm-deploy e2e-azure
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: "4"
            memory: "4Gi"
    annotations:
      testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-postsubmit
      testgrid-tab-name: secrets-store-csi-driver-e2e-azure-postsubmit
      description: "Run e2e test with azure provider for Secrets Store CSI driver postsubmit"
      testgrid-num-columns-recent: '30'
    rerun_auth_config:
      github_users:
      - aramase
      - ritazh
  - name: secrets-store-csi-driver-e2e-gcp-postsubmit
    decorate: true
    decoration_config:
      timeout: 25m
    always_run: true
    path_alias: sigs.k8s.io/secrets-store-csi-driver
    branches:
    - ^main$
    labels:
      # this is required because we want to run kind in docker
      preset-dind-enabled: "true"
      # this is required to make CNI installation to succeed for kind
      preset-kind-volume-mounts: "true"
    spec:
      serviceAccountName: secrets-store-csi-driver-gcp
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - bash
          - -c
          - >-
            make e2e-bootstrap e2e-helm-deploy e2e-gcp
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: "4"
            memory: "4Gi"
    annotations:
      testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-postsubmit
      testgrid-tab-name: secrets-store-csi-driver-e2e-gcp-postsubmit
      description: "Run e2e test with gcp provider for Secrets Store CSI driver postsubmit"
      testgrid-num-columns-recent: '30'
    rerun_auth_config:
      github_users:
      - aramase
      - ritazh
  - name: secrets-store-csi-driver-e2e-aws-postsubmit
    decorate: true
    decoration_config:
      timeout: 1h
    always_run: true
    optional: true
    path_alias: sigs.k8s.io/secrets-store-csi-driver
    branches:
    - ^main$
    labels:
      # this is required because we want to run kind in docker
      preset-dind-enabled: "true"
      # this is required to make CNI installation to succeed for kind
      preset-kind-volume-mounts: "true"
      # sets up the aws parameters used for testing
      preset-aws-credential-aws-oss-testing: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - bash
          - -c
          - >-
            make setup-eks-cluster e2e-aws e2e-eks-cleanup
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: "4"
            memory: "6Gi"
    annotations:
      testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-postsubmit
      testgrid-tab-name: secrets-store-csi-driver-e2e-aws-postsubmit
      description: "Run e2e test with aws provider for Secrets Store CSI driver postsubmit"
      testgrid-num-columns-recent: '30'
    rerun_auth_config:
      github_users:
      - aramase
      - ritazh

periodics:
- interval: 24h
  name: periodic-secrets-store-csi-driver-image-scan
  decorate: true
  decoration_config:
    timeout: 10m
  labels:
    preset-dind-enabled: "true"
  extra_refs:
  - org: kubernetes-sigs
    repo: secrets-store-csi-driver
    base_ref: main
    path_alias: sigs.k8s.io/secrets-store-csi-driver
  spec:
    containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - bash
          - -c
          - >-
            make container image-scan
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
  annotations:
    testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-periodic
    testgrid-tab-name: secrets-store-csi-driver-image-scan
    testgrid-alert-email: kubernetes-secrets-store-csi-driver@googlegroups.com
    description: "Run vulnerability scans for Secrets Store CSI driver images."
    testgrid-num-columns-recent: '30'
- interval: 12h
  name: periodic-secrets-store-csi-driver-upgrade-test-azure
  decorate: true
  decoration_config:
    timeout: 30m
  labels:
    # this is required because we want to run kind in docker
    preset-dind-enabled: "true"
    # this is required to make CNI installation to succeed for kind
    preset-kind-volume-mounts: "true"
    # sets up the azure keyvault parameters used for testing
    preset-azure-secrets-store-creds: "true"
  extra_refs:
  - org: kubernetes-sigs
    repo: secrets-store-csi-driver
    base_ref: main
    path_alias: sigs.k8s.io/secrets-store-csi-driver
  spec:
    containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - bash
          - -c
          - >-
            make e2e-bootstrap e2e-helm-deploy-release e2e-azure && make e2e-helm-upgrade e2e-azure
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
  annotations:
    testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-periodic
    testgrid-tab-name: secrets-store-csi-driver-upgrade-test-azure
    testgrid-alert-email: kubernetes-secrets-store-csi-driver@googlegroups.com
    description: "Run driver upgrade test with azure provider for Secrets Store CSI driver."
    testgrid-num-columns-recent: '30'
- interval: 12h
  name: periodic-secrets-store-csi-driver-inplace-upgrade-test-e2e-provider
  decorate: true
  decoration_config:
    timeout: 30m
  labels:
    # this is required because we want to run kind in docker
    preset-dind-enabled: "true"
    # this is required to make CNI installation to succeed for kind
    preset-kind-volume-mounts: "true"
  extra_refs:
  - org: kubernetes-sigs
    repo: secrets-store-csi-driver
    base_ref: main
    path_alias: sigs.k8s.io/secrets-store-csi-driver
  spec:
    containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - bash
          - -c
          - >-
            INPLACE_UPGRADE_TEST=true make e2e-bootstrap e2e-mock-provider-container e2e-helm-deploy-release e2e-provider-deploy e2e-provider && INPLACE_UPGRADE_TEST=true make e2e-helm-upgrade e2e-provider
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
  annotations:
    testgrid-dashboards: sig-auth-secrets-store-csi-driver, sig-auth-secrets-store-csi-driver-periodic
    testgrid-tab-name: secrets-store-csi-driver-inplace-upgrade-test-e2e-provider
    testgrid-alert-email: kubernetes-secrets-store-csi-driver@googlegroups.com
    description: "Run driver in-place upgrade test with e2e provider for Secrets Store CSI driver."
    testgrid-num-columns-recent: '30'
