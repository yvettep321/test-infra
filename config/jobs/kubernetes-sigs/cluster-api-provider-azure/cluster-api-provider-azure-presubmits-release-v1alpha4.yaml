presubmits:
  kubernetes-sigs/cluster-api-provider-azure:
  - name: pull-cluster-api-provider-azure-test-v1alpha4
    always_run: true
    optional: false
    decorate: true
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    branches:
    - ^release-0.5$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220727-f055b40439-1.21
        command:
        - "./scripts/ci-test.sh"
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-test-v1alpha4
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-build-v1alpha4
    always_run: true
    optional: false
    decorate: true
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    branches:
    - ^release-0.5$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220727-f055b40439-1.21
        command:
        - "./scripts/ci-build.sh"
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-build-v1alpha4
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-e2e-v1alpha4
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    optional: false
    decorate: true
    # please see: https://play.golang.org/p/JJSVylVPd53 for more insights
    run_if_changed: (^[^d].*$)|(^d$)|(^.[^o].*$)|(^do$)|(^..[^c].*$)|(^doc$)|(^...[^s].*$)|(^docs$)|(^....[^/].*$)|(^[^d][^o][^c][^s]/.*$)
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-cred-only: "true"
      preset-azure-anonymous-pull: "true"
    branches:
    - ^release-0.5$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220727-f055b40439-1.21
        command:
          - runner.sh
        args:
          - ./scripts/ci-e2e.sh
        env:
          - name: GINKGO_FOCUS
            value: "Workload cluster creation"
          - name: GINKGO_SKIP
            value: "Creating a GPU-enabled cluster|.*Windows.*dockershim.*|.*AKS.*|Creating a cluster that uses the external cloud provider"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-e2e-v1alpha4
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-e2e-full-v1alpha4
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    always_run: false
    optional: true
    decorate: true
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-cred-only: "true"
      preset-azure-anonymous-pull: "true"
    branches:
    - ^release-0.5$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220727-f055b40439-1.21
        command:
          - runner.sh
        args:
          - ./scripts/ci-e2e.sh
        env:
          - name: GINKGO_FOCUS
            value: "Workload cluster creation"
          - name: GINKGO_SKIP
            value: ""
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-e2e-full-v1alpha4
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-e2e-windows-dockershim-v1alpha4
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    optional: true
    decorate: true
    # please see: https://play.golang.org/p/JJSVylVPd53 for more insights
    run_if_changed: (^[^d].*$)|(^d$)|(^.[^o].*$)|(^do$)|(^..[^c].*$)|(^doc$)|(^...[^s].*$)|(^docs$)|(^....[^/].*$)|(^[^d][^o][^c][^s]/.*$)
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-cred-only: "true"
      preset-azure-anonymous-pull: "true"
    branches:
    - ^release-0.5$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220727-f055b40439-1.21
        command:
          - runner.sh
        args:
          - ./scripts/ci-e2e.sh
        env:
          - name: GINKGO_FOCUS
            value: ".*Windows.*dockershim.*"
          - name: GINKGO_SKIP
            value: ""
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-e2e-windows-dockershim-v1alpha4
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-e2e-exp-v1alpha4
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    always_run: false
    optional: true
    decorate: true
    run_if_changed: '^((exp)\/|main\.go|go\.mod|go\.sum|Dockerfile|Makefile)|managed.*\.go|aks'
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-cred-only: "true"
      preset-azure-anonymous-pull: "true"
    branches:
    - ^release-0.5$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220727-f055b40439-1.21
        command:
          - runner.sh
        args:
          - ./scripts/ci-e2e.sh
        env:
          - name: GINKGO_FOCUS
            value: ".*AKS.*"
          - name: GINKGO_SKIP
            value: ""
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-e2e-exp-v1alpha4
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-capi-e2e-v1alpha4
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    always_run: false
    optional: true
    decorate: true
    decoration_config:
      timeout: 4h
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-cred-only: "true"
      preset-azure-anonymous-pull: "true"
    branches:
    - ^release-0.5$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220727-f055b40439-1.21
        command:
          - runner.sh
        args:
          - ./scripts/ci-e2e.sh
        env:
          - name: GINKGO_FOCUS
            value: "Cluster API E2E tests"
          - name: GINKGO_SKIP
            value: "\\[K8s-Upgrade\\]"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-capi-e2e-v1alpha4
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-verify-v1alpha4
    always_run: true
    optional: false
    decorate: true
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    labels:
      # required for shellcheck in container.
      preset-dind-enabled: "true"
    branches:
    - ^release-0.5$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220727-f055b40439-1.21
        command:
        - "runner.sh"
        - "make"
        - "verify"
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-verify-v1alpha4
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-conformance-v1alpha4
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    always_run: false
    optional: true
    decorate: true
    decoration_config:
      timeout: 4h
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-cred-only: "true"
    branches:
    - ^release-0.5$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220727-f055b40439-1.21
        command:
          - runner.sh
        args:
          - ./scripts/ci-conformance.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 2
            memory: "9Gi"
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-conformance-v1alpha4
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-apidiff-v1alpha4
    decorate: true
    path_alias: sigs.k8s.io/cluster-api-provider-azure
    always_run: true
    optional: true
    labels:
      preset-service-account: "true"
    branches:
    - ^release-0.5$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220727-f055b40439-1.21
        command:
          - runner.sh
        args:
          - ./scripts/ci-apidiff.sh
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-apidiff-v1alpha4
  - name: pull-cluster-api-provider-azure-ci-entrypoint-v1alpha4
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    optional: true
    decorate: true
    # please see: https://play.golang.org/p/JJSVylVPd53 for more insights
    run_if_changed: (^[^d].*$)|(^d$)|(^.[^o].*$)|(^do$)|(^..[^c].*$)|(^doc$)|(^...[^s].*$)|(^docs$)|(^....[^/].*$)|(^[^d][^o][^c][^s]/.*$)
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-cred-only: "true"
      preset-azure-anonymous-pull: "true"
    branches:
    - ^release-0.5$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220727-f055b40439-1.21
        command:
          - runner.sh
        args:
          - ./scripts/ci-entrypoint.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-ci-entrypoint-v1alpha4
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
      description: Creates a CAPZ cluster and exports KUBECONFIG. This job validates ci-entrypoint.sh used by other repositories for running tests on CAPZ clusters.
