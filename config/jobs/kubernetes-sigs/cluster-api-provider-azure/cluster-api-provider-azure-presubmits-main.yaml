presubmits:
  kubernetes-sigs/cluster-api-provider-azure:
  - name: pull-cluster-api-provider-azure-test
    always_run: true
    optional: false
    decorate: true
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    branches:
    - ^main$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
        - "./scripts/ci-test.sh"
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-test-main
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-build
    always_run: true
    optional: false
    decorate: true
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    branches:
    - ^main$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
        - "./scripts/ci-build.sh"
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-build-main
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-e2e
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    optional: false
    decorate: true
    # please see: https://play.golang.org/p/JJSVylVPd53 for more insights
    run_if_changed: (^[^d].*$)|(^d$)|(^.[^o].*$)|(^do$)|(^..[^c].*$)|(^doc$)|(^...[^s].*$)|(^docs$)|(^....[^/].*$)|(^[^d][^o][^c][^s]/.*$)
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-cred-only: "true"
      preset-azure-anonymous-pull: "true"
    branches:
    - ^main$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - ./scripts/ci-e2e.sh
        env:
          - name: GINKGO_FOCUS
            value: \[REQUIRED\]
          - name: GINKGO_SKIP
            value: ""
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-e2e-main
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-e2e-optional
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    always_run: false
    optional: true
    decorate: true
    decoration_config:
      timeout: 4h
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-cred-only: "true"
      preset-azure-anonymous-pull: "true"
    branches:
    - ^main$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - ./scripts/ci-e2e.sh
        env:
          - name: GINKGO_FOCUS
            value: \[OPTIONAL\]
          - name: GINKGO_SKIP
            value: ""
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-e2e-optional-main
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-e2e-csi-migration
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    always_run: false
    optional: true
    decorate: true
    decoration_config:
      timeout: 4h
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-cred-only: "true"
      preset-azure-anonymous-pull: "true"
    branches:
    - ^main$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - ./scripts/ci-e2e.sh
        env:
          - name: GINKGO_FOCUS
            value: \[CSI Migration\]
          - name: GINKGO_SKIP
            value: ""
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-e2e-csi-migration-main
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-e2e-exp
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    always_run: false
    optional: true
    decorate: true
    run_if_changed: '^((exp)\/|main\.go|go\.mod|go\.sum|Dockerfile|Makefile)|managed.*\.go|aks'
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-cred-only: "true"
      preset-azure-anonymous-pull: "true"
    branches:
    - ^main$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - ./scripts/ci-e2e.sh
        env:
          - name: GINKGO_FOCUS
            value: \[EXPERIMENTAL\]
          - name: GINKGO_SKIP
            value: ""
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-e2e-exp-main
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-capi-e2e
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    always_run: false
    optional: true
    decorate: true
    decoration_config:
      timeout: 4h
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-cred-only: "true"
      preset-azure-anonymous-pull: "true"
    branches:
    - ^main$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - ./scripts/ci-e2e.sh
        env:
          - name: GINKGO_FOCUS
            value: "Cluster API E2E tests"
          - name: GINKGO_SKIP
            value: "\\[K8s-Upgrade\\]|API Version Upgrade"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-capi-e2e-main
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-verify
    always_run: true
    optional: false
    decorate: true
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    labels:
      # required for shellcheck in container.
      preset-dind-enabled: "true"
    branches:
    - ^main$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
        - "runner.sh"
        - "make"
        - "verify"
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-verify-main
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-conformance
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    always_run: false
    optional: true
    decorate: true
    decoration_config:
      timeout: 4h
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-cred-only: "true"
    branches:
    - ^main$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - ./scripts/ci-conformance.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 2
            memory: "9Gi"
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-conformance-main
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-conformance-with-ci-artifacts
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    always_run: false
    optional: true
    decorate: true
    decoration_config:
      timeout: 4h
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-cred-only: "true"
    branches:
    - ^main$
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
          command:
            - runner.sh
          args:
            - ./scripts/ci-conformance.sh
          env:
            - name: E2E_ARGS
              value: "-kubetest.use-ci-artifacts"
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 2
              memory: "9Gi"
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-conformance-k8s-ci-main
  - name: pull-cluster-api-provider-azure-windows-containerd-upstream-with-ci-artifacts
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    always_run: false
    optional: true
    decorate: true
    decoration_config:
      timeout: 4h
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-cred-only: "true"
    branches:
    - ^main$
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
          command:
            - runner.sh
          args:
            - ./scripts/ci-conformance.sh
          env:
            - name: E2E_ARGS
              value: "-kubetest.use-ci-artifacts"
            - name: WINDOWS
              value: "true"
            - name: WINDOWS_FLAVOR
              value: "containerd"
            # Windows isn't really conformance, we typically run at 4 to keep the time reasonable (~45 mins)
            - name: CONFORMANCE_NODES
              value: "4"
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 2
              memory: "9Gi"
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-upstream-k8s-ci-windows-containerd-main
  - name: pull-cluster-api-provider-azure-windows-containerd-upstream-with-ci-artifacts-serial-slow
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    always_run: false
    optional: true
    decorate: true
    decoration_config:
      timeout: 4h
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-cred-only: "true"
    branches:
    - ^main$
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
          command:
            - runner.sh
          args:
            - ./scripts/ci-conformance.sh
          env:
            - name: E2E_ARGS
              value: "-kubetest.use-ci-artifacts"
            - name: WINDOWS
              value: "true"
            - name: WINDOWS_FLAVOR
              value: "containerd"
            - name: CONFORMANCE_NODES
              value: "1"
            - name: KUBETEST_WINDOWS_CONFIG
              value: "upstream-windows-serial-slow.yaml"
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 2
              memory: "9Gi"
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-upstream-k8s-ci-windows-containerd-serial-slow-main
  - name: pull-cluster-api-provider-azure-apidiff
    decorate: true
    decoration_config:
      gcs_credentials_secret: "" # Use workload identity for uploading artifacts
    path_alias: sigs.k8s.io/cluster-api-provider-azure
    always_run: true
    optional: true
    branches:
    - ^main$
    spec:
      serviceAccountName: prowjob-default-sa
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - ./scripts/ci-apidiff.sh
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-apidiff-main
  - name: pull-cluster-api-provider-azure-coverage
    always_run: true
    optional: true
    decorate: true
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    branches:
    - ^main$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
          result=0
          ./scripts/ci-test-coverage.sh || result=$?
          cp coverage.* ${ARTIFACTS}
          cd ../../k8s.io/test-infra/gopherage
          GO111MODULE=on go build .
          ./gopherage filter --exclude-path="zz_generated,generated\.go" "${ARTIFACTS}/coverage.out" > "${ARTIFACTS}/filtered.cov" || result=$?
          ./gopherage html "${ARTIFACTS}/filtered.cov" > "${ARTIFACTS}/coverage.html" || result=$?
          ./gopherage junit --threshold 0 "${ARTIFACTS}/filtered.cov" > "${ARTIFACTS}/junit_coverage.xml" || result=$?
          exit $result
        securityContext:
          privileged: true
  - name: pull-cluster-api-provider-azure-e2e-workload-upgrade
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-cred-only: "true"
      preset-azure-anonymous-pull: "true"
    decorate: true
    optional: true
    always_run: false
    branches:
    - ^main$
    path_alias: sigs.k8s.io/cluster-api-provider-azure
    extra_refs:
    - org: kubernetes
      repo: kubernetes
      base_ref: master
      path_alias: k8s.io/kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        args:
          - runner.sh
          - "./scripts/ci-e2e.sh"
        env:
          - name: GINKGO_FOCUS
            value: "\\[K8s-Upgrade\\]"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 7300m
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-e2e-upgrade
  - name: pull-cluster-api-provider-azure-apiversion-upgrade
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-cred-only: "true"
      preset-azure-anonymous-pull: "true"
    decorate: true
    optional: true
    always_run: false
    branches:
      - ^main$
    path_alias: sigs.k8s.io/cluster-api-provider-azure
    extra_refs:
      - org: kubernetes
        repo: kubernetes
        base_ref: master
        path_alias: k8s.io/kubernetes
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
          args:
            - runner.sh
            - "./scripts/ci-e2e.sh"
          env:
            - name: GINKGO_FOCUS
              value: "API Version Upgrade"
            - name: KUBERNETES_VERSION
              value: "v1.22.9"
          # we need privileged mode in order to do docker in docker
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 7300m
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-apiversion-upgrade-main
      description: This job creates clusters using supported older api versions (v1alpha4), and verifies that the clusters continue to operate properly after the api version is upgraded to the latest (v1beta1).
  - name: pull-cluster-api-provider-azure-ci-entrypoint
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    optional: false
    decorate: true
    # please see: https://play.golang.org/p/JJSVylVPd53 for more insights
    run_if_changed: (^[^d].*$)|(^d$)|(^.[^o].*$)|(^do$)|(^..[^c].*$)|(^doc$)|(^...[^s].*$)|(^docs$)|(^....[^/].*$)|(^[^d][^o][^c][^s]/.*$)
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-cred-only: "true"
      preset-azure-anonymous-pull: "true"
    branches:
    - ^main$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - ./scripts/ci-entrypoint.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        env:
          - name: TEST_WINDOWS
            value: "true"
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-ci-entrypoint-main
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
      description: Creates a CAPZ cluster and exports KUBECONFIG. This job validates ci-entrypoint.sh used by other repositories for running tests on CAPZ clusters.
