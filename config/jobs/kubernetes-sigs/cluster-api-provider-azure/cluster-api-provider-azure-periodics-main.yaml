periodics:
- name: periodic-cluster-api-provider-azure-conformance-main
  decorate: true
  decoration_config:
    timeout: 4h
  interval: 12h
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
    preset-azure-cred-only: "true"
  extra_refs:
    - org: kubernetes-sigs
      repo: cluster-api-provider-azure
      base_ref: main
      path_alias: "sigs.k8s.io/cluster-api-provider-azure"
  spec:
    containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - ./scripts/ci-conformance.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 2
            memory: "9Gi"
  annotations:
    testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
    testgrid-tab-name: capz-periodic-conformance-main
    testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
    description: Runs conformance & node conformance tests on a stable k8s version with latest cluster-api-provider-azure
- name: periodic-cluster-api-provider-azure-conformance-with-ci-artifacts-main
  decorate: true
  decoration_config:
    timeout: 4h
  interval: 12h
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
    preset-azure-cred-only: "true"
  extra_refs:
    - org: kubernetes-sigs
      repo: cluster-api-provider-azure
      base_ref: main
      path_alias: "sigs.k8s.io/cluster-api-provider-azure"
  spec:
    containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - ./scripts/ci-conformance.sh
        env:
        - name: E2E_ARGS
          value: "-kubetest.use-ci-artifacts"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 2
            memory: "9Gi"
  annotations:
    testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
    testgrid-tab-name: capz-periodic-conformance-k8s-ci-main
    testgrid-alert-email: kubernetes-provider-azure@googlegroups.com
    description: Runs conformance & node conformance tests on latest kubernetes master with cluster-api-provider-azure
- name: periodic-cluster-api-provider-azure-capi-e2e-main
  decorate: true
  decoration_config:
    timeout: 4h
  interval: 12h
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
    preset-azure-cred-only: "true"
    preset-azure-anonymous-pull: "true"
  extra_refs:
    - org: kubernetes-sigs
      repo: cluster-api-provider-azure
      base_ref: main
      path_alias: "sigs.k8s.io/cluster-api-provider-azure"
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
      command:
        - runner.sh
      args:
        - ./scripts/ci-e2e.sh
      env:
        - name: GINKGO_FOCUS
          value: "Cluster API E2E tests"
        - name: GINKGO_SKIP
          value: "\\[K8s-Upgrade\\]|API Version Upgrade"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
  annotations:
    testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
    testgrid-tab-name: capz-periodic-capi-e2e-main
    testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
- name: periodic-cluster-api-provider-azure-apiversion-upgrade-main
  decorate: true
  decoration_config:
    timeout: 4h
  interval: 12h
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
    preset-azure-cred-only: "true"
    preset-azure-anonymous-pull: "true"
  extra_refs:
    - org: kubernetes-sigs
      repo: cluster-api-provider-azure
      base_ref: main
      path_alias: "sigs.k8s.io/cluster-api-provider-azure"
  spec:
    containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
        command:
          - runner.sh
        args:
          - ./scripts/ci-e2e.sh
        env:
          - name: GINKGO_FOCUS
            value: "API Version Upgrade"
          - name: KUBERNETES_VERSION
            value: "v1.22.9"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 7300m
  annotations:
    testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
    testgrid-tab-name: capz-periodic-apiversion-upgrade-main
    description: This job creates clusters using supported older api versions (v1alpha4), and verifies that the clusters continue to operate properly after the api version is upgraded to the latest (v1beta1).
- name: periodic-cluster-api-provider-azure-coverage
  interval: 12h
  decorate: true
  path_alias: "sigs.k8s.io/cluster-api-provider-azure"
  extra_refs:
    - org: kubernetes-sigs
      repo: cluster-api-provider-azure
      base_ref: main
      path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
      command:
        - runner.sh
      args:
        - bash
        - -c
        - |
          result=0
          ./scripts/ci-test-coverage.sh || result=$?
          cp coverage.* ${ARTIFACTS}
          cd ../../k8s.io/test-infra/gopherage
          GO111MODULE=on go build .
          ./gopherage filter --exclude-path="zz_generated,generated\.go" "${ARTIFACTS}/coverage.out" > "${ARTIFACTS}/filtered.cov" || result=$?
          ./gopherage html "${ARTIFACTS}/filtered.cov" > "${ARTIFACTS}/coverage.html" || result=$?
          ./gopherage junit --threshold 0 "${ARTIFACTS}/filtered.cov" > "${ARTIFACTS}/junit_coverage.xml" || result=$?
          exit $result
      securityContext:
        privileged: true
- name: periodic-cluster-api-provider-azure-e2e-full-main
  decorate: true
  decoration_config:
    timeout: 4h
  interval: 12h
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
    preset-azure-cred-only: "true"
    preset-azure-anonymous-pull: "true"
  extra_refs:
    - org: kubernetes-sigs
      repo: cluster-api-provider-azure
      base_ref: main
      path_alias: "sigs.k8s.io/cluster-api-provider-azure"
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-1.24
      command:
        - runner.sh
      args:
        - ./scripts/ci-e2e.sh
      env:
        - name: GINKGO_FOCUS
          value: "Workload cluster creation"
        - name: GINKGO_SKIP
          value: ""
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
  annotations:
    testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
    testgrid-tab-name: capz-periodic-e2e-full-main
    testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
