presubmits:
  kubernetes/kubernetes:
  - name: pull-kubernetes-e2e-kind-dual-canary
    cluster: k8s-infra-prow-build
    optional: true
    always_run: false
    skip_report: false
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    decoration_config:
      timeout: 60m
      grace_period: 15m
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/krte:v20220804-9dd62ce78a-master
        command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
        env:
        - name: BUILD_TYPE
          value: docker
        - name: FOCUS
          value: \[Conformance\]|DualStack
        - name: PARALLEL
          value: "true"
        # enable IPV6 in bootstrap image
        - name: "DOCKER_IN_DOCKER_IPV6_ENABLED"
          value: "true"
        # tell kind CI script to use DualStack
        - name: "IP_FAMILY"
          value: "dual"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 4
            memory: 9Gi
          requests:
            cpu: 4
            memory: 9Gi
    annotations:
      testgrid-dashboards: sig-network-kind
      testgrid-tab-name: pr-sig-network-kind, dual
      description: Runs tests against a Dual Stack Kubernetes in Docker cluster
      testgrid-alert-email: antonio.ojea.garcia@gmail.com
  - name: pull-kubernetes-e2e-kind-ipvs-dual-canary
    cluster: k8s-infra-prow-build
    optional: true
    always_run: false
    skip_report: false
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    decoration_config:
      timeout: 60m
      grace_period: 15m
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/krte:v20220804-9dd62ce78a-master
        command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
        env:
        - name: BUILD_TYPE
          value: docker
        - name: FOCUS
          value: \[Conformance\]|DualStack
        - name: PARALLEL
          value: "true"
        # enable IPV6 in bootstrap image
        - name: "DOCKER_IN_DOCKER_IPV6_ENABLED"
          value: "true"
        # tell kind CI script to use DualStack
        - name: "IP_FAMILY"
          value: "dual"
        - name: KUBE_PROXY_MODE
          value: "ipvs"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 4
            memory: 9Gi
          requests:
            cpu: 4
            memory: 9Gi
    annotations:
      testgrid-dashboards: sig-network-kind
      testgrid-tab-name: pr-sig-network-kind, ipvs, dual
      description: Runs tests against a Dual Stack Kubernetes in Docker cluster
      testgrid-alert-email: antonio.ojea.garcia@gmail.com
  # network test against kubernetes master branch with `kind` multizone cluster
  - name: pull-kubernetes-e2e-kind-multizone
    cluster: k8s-infra-prow-build
    optional: true
    always_run: false
    skip_report: false
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    decoration_config:
      timeout: 60m
      grace_period: 15m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: "k8s.io/test-infra"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/krte:v20220804-9dd62ce78a-master
        command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && $GOPATH/src/k8s.io/test-infra/experiment/kind-multizone-e2e.sh
        env:
        - name: PARALLEL
          value: "true"
        - name: FOCUS
          value: \[sig-network\]|\[Conformance\]
        - name: SKIP
          value: \[Feature:(Networking-IPv6|Example|Federation|PerformanceDNS|ProxyTerminatingEndpoints)\]|LB.health.check|LoadBalancer|load.balancer|GCE|NetworkPolicy|DualStack
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 4
            memory: 9Gi
          requests:
            cpu: 4
            memory: 9Gi
    annotations:
      testgrid-dashboards: sig-network-kind
      testgrid-tab-name: pr-sig-network-kind, multizone
      description: Runs tests against a Multizone Kubernetes in Docker cluster
      testgrid-alert-email: antonio.ojea.garcia@gmail.com, robertjscott@google.com

periodics:
# network test against kubernetes master branch with `kind`
- interval: 6h
  name: ci-kubernetes-kind-network
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
  decorate: true
  decoration_config:
    timeout: 200m
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/krte:v20220804-9dd62ce78a-master
      command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
      env:
      # don't retry network tests
      - name: GINKGO_TOLERATE_FLAKES
        value: "n"
      - name: FOCUS
        value: \[sig-network\]|\[Conformance\]
      - name: SKIP
        value: \[Feature:(Networking-IPv6|Example|Federation|PerformanceDNS|ProxyTerminatingEndpoints)\]|LB.health.check|LoadBalancer|load.balancer|GCE|NetworkPolicy|DualStack
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      resources:
        limits:
          cpu: 4
          memory: 9Gi
        requests:
          cpu: 4
          memory: 9Gi
  annotations:
    testgrid-dashboards: sig-network-kind, sig-testing-kind
    testgrid-tab-name: sig-network-kind, master
    description: Runs network tests using KIND against latest kubernetes master with a kubernetes-in-docker cluster
    testgrid-alert-email: antonio.ojea.garcia@gmail.com, kubernetes-sig-network-test-failures@googlegroups.com
    testgrid-num-columns-recent: '3'
# network test against kubernetes master branch with `kind` ipv6
- interval: 6h
  name: ci-kubernetes-kind-network-ipv6
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
  decorate: true
  decoration_config:
    timeout: 200m
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/krte:v20220804-9dd62ce78a-master
      command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
      env:
      # enable IPV6 in bootstrap image
      - name: "DOCKER_IN_DOCKER_IPV6_ENABLED"
        value: "true"
      # tell kind CI script to use ipv6
      - name: "IP_FAMILY"
        value: "ipv6"
      # don't retry network tests
      - name: GINKGO_TOLERATE_FLAKES
        value: "n"
      - name: FOCUS
        value: \[sig-network\]|\[Conformance\]
      - name: SKIP
        value: \[Feature:(Networking-IPv4|Example|Federation|PerformanceDNS|ProxyTerminatingEndpoints)\]|Internet.connection|upstream.nameserver|LB.health.check|LoadBalancer|load.balancer|GCE|NetworkPolicy|DualStack
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      resources:
        limits:
          cpu: 4
          memory: 9Gi
        requests:
          cpu: 4
          memory: 9Gi
  annotations:
    testgrid-dashboards: sig-network-kind, sig-testing-kind
    testgrid-tab-name: sig-network-kind, IPv6, master
    description: Runs network tests using KIND against latest kubernetes master with an IPv6 kubernetes-in-docker cluster
    testgrid-alert-email: antonio.ojea.garcia@gmail.com, kubernetes-sig-network-test-failures@googlegroups.com
    testgrid-num-columns-recent: '3'
# network test against kubernetes master branch with `kind` dual stack
- interval: 6h
  name: ci-kubernetes-kind-network-dual
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
  decorate: true
  decoration_config:
    timeout: 200m
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/krte:v20220804-9dd62ce78a-master
      command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
      env:
      - name: BUILD_TYPE
        value: docker
      # enable IPV6 in bootstrap image
      - name: "DOCKER_IN_DOCKER_IPV6_ENABLED"
        value: "true"
      # tell kind CI script to use ipv6
      - name: "IP_FAMILY"
        value: "dual"
      # don't retry network tests
      - name: GINKGO_TOLERATE_FLAKES
        value: "n"
      - name: FOCUS
        value: \[sig-network\]|\[Conformance\]
      - name: SKIP
        value: \[Feature:(Networking-IPv4|Example|Federation|PerformanceDNS|ProxyTerminatingEndpoints)\]|Internet.connection|upstream.nameserver|LB.health.check|LoadBalancer|load.balancer|GCE|NetworkPolicy
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      resources:
        limits:
          cpu: 4
          memory: 9Gi
        requests:
          cpu: 4
          memory: 9Gi
  annotations:
    testgrid-dashboards: sig-network-kind, sig-testing-kind
    testgrid-tab-name: sig-network-kind, dual, master
    description: Runs network tests using KIND against latest kubernetes master with a DualStack kubernetes-in-docker cluster
    testgrid-alert-email: antonio.ojea.garcia@gmail.com, kubernetes-sig-network-test-failures@googlegroups.com
    testgrid-num-columns-recent: '3'
# network test against kubernetes master branch with `kind`
- interval: 6h
  name: ci-kubernetes-kind-network-ipvs
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
  decorate: true
  decoration_config:
    timeout: 200m
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/krte:v20220804-9dd62ce78a-master
      command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
      env:
      # don't retry network tests
      - name: GINKGO_TOLERATE_FLAKES
        value: "n"
      - name: KUBE_PROXY_MODE
        value: "ipvs"
      - name: FOCUS
        value: \[sig-network\]|\[Conformance\]
      - name: SKIP
        value: \[Feature:(Networking-IPv6|Example|Federation|PerformanceDNS|ProxyTerminatingEndpoints)\]|LB.health.check|LoadBalancer|load.balancer|GCE|NetworkPolicy|DualStack
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      resources:
        limits:
          cpu: 4
          memory: 9Gi
        requests:
          cpu: 4
          memory: 9Gi
  annotations:
    testgrid-dashboards: sig-network-kind, sig-testing-kind
    testgrid-tab-name: sig-network-kind, ipvs, master
    description: Runs network tests using KIND against latest kubernetes master with a kubernetes-in-docker cluster
    testgrid-alert-email: antonio.ojea.garcia@gmail.com, kubernetes-sig-network-test-failures@googlegroups.com
    testgrid-num-columns-recent: '3'
# network test against kubernetes master branch with `kind` ipv6
- interval: 6h
  name: ci-kubernetes-kind-network-ipvs-ipv6
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
  decorate: true
  decoration_config:
    timeout: 200m
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/krte:v20220804-9dd62ce78a-master
      command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
      env:
      # enable IPV6 in bootstrap image
      - name: "DOCKER_IN_DOCKER_IPV6_ENABLED"
        value: "true"
      # tell kind CI script to use ipv6
      - name: "IP_FAMILY"
        value: "ipv6"
      # don't retry network tests
      - name: GINKGO_TOLERATE_FLAKES
        value: "n"
      - name: KUBE_PROXY_MODE
        value: "ipvs"
      - name: FOCUS
        value: \[sig-network\]|\[Conformance\]
      - name: SKIP
        value: \[Feature:(Networking-IPv4|Example|Federation|PerformanceDNS|ProxyTerminatingEndpoints)\]|Internet.connection|upstream.nameserver|LB.health.check|LoadBalancer|load.balancer|GCE|NetworkPolicy|DualStack
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      resources:
        limits:
          cpu: 4
          memory: 9Gi
        requests:
          cpu: 4
          memory: 9Gi
  annotations:
    testgrid-dashboards: sig-network-kind, sig-testing-kind
    testgrid-tab-name: sig-network-kind, ipvs, IPv6, master
    description: Runs network tests using KIND against latest kubernetes master with an IPv6 kubernetes-in-docker cluster
    testgrid-alert-email: antonio.ojea.garcia@gmail.com, kubernetes-sig-network-test-failures@googlegroups.com
    testgrid-num-columns-recent: '3'
# network test against kubernetes master branch with `kind` dual stack
- interval: 6h
  name: ci-kubernetes-kind-network-ipvs-dual
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
  decorate: true
  decoration_config:
    timeout: 200m
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/krte:v20220804-9dd62ce78a-master
      command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
      env:
      - name: BUILD_TYPE
        value: docker
      # enable IPV6 in bootstrap image
      - name: "DOCKER_IN_DOCKER_IPV6_ENABLED"
        value: "true"
      # tell kind CI script to use ipv6
      - name: "IP_FAMILY"
        value: "dual"
      # don't retry network tests
      - name: GINKGO_TOLERATE_FLAKES
        value: "n"
      - name: KUBE_PROXY_MODE
        value: "ipvs"
      - name: FOCUS
        value: \[sig-network\]|\[Conformance\]
      - name: SKIP
        value: \[Feature:(Networking-IPv4|Example|Federation|PerformanceDNS|ProxyTerminatingEndpoints)\]|Internet.connection|upstream.nameserver|LB.health.check|LoadBalancer|load.balancer|GCE|NetworkPolicy
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      resources:
        limits:
          cpu: 4
          memory: 9Gi
        requests:
          cpu: 4
          memory: 9Gi
  annotations:
    testgrid-dashboards: sig-network-kind, sig-testing-kind
    testgrid-tab-name: sig-network-kind, ipvs, dual, master
    description: Runs network tests using KIND against latest kubernetes master with a DualStack kubernetes-in-docker cluster
    testgrid-alert-email: antonio.ojea.garcia@gmail.com, kubernetes-sig-network-test-failures@googlegroups.com
    testgrid-num-columns-recent: '3'
# network test against kubernetes master branch with `kind`, skipping
# serial tests so it runs in ~20m
- interval: 6h
  name: ci-kubernetes-kind-network-parallel
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
  decorate: true
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/krte:v20220804-9dd62ce78a-master
      env:
      # skip serial tests and run with --ginkgo-parallel
      - name: "PARALLEL"
        value: "true"
      # don't retry network tests
      - name: GINKGO_TOLERATE_FLAKES
        value: "n"
      - name: FOCUS
        value: \[sig-network\]|\[Conformance\]
      - name: SKIP
        value: \[Slow\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]
      command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      resources:
        limits:
          cpu: 4
          memory: 9Gi
        requests:
          cpu: 4
          memory: 9Gi
  annotations:
    testgrid-dashboards: sig-network-kind, sig-testing-kind
    testgrid-tab-name: sig-network-kind, master [non-serial]
    description: Runs network tests using KIND against latest kubernetes master with a kubernetes-in-docker cluster, skipping [Serial] tests
    testgrid-alert-email: antonio.ojea.garcia@gmail.com, kubernetes-sig-network-test-failures@googlegroups.com
    testgrid-num-columns-recent: '3'
# network test against kubernetes master branch with `kind` ipv6
- interval: 6h
  name: ci-kubernetes-kind-network-parallel-ipv6
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
  decorate: true
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/krte:v20220804-9dd62ce78a-master
      env:
      # enable IPV6 in bootstrap image
      - name: "DOCKER_IN_DOCKER_IPV6_ENABLED"
        value: "true"
      # tell kind CI script to use ipv6
      - name: "IP_FAMILY"
        value: "ipv6"
      # skip serial tests and run with --ginkgo-parallel
      - name: "PARALLEL"
        value: "true"
      # don't retry network tests
      - name: GINKGO_TOLERATE_FLAKES
        value: "n"
      - name: FOCUS
        value: \[sig-network\]|\[Conformance\]
      - name: SKIP
        value: \[Slow\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]
      command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      resources:
        limits:
          cpu: 4
          memory: 9Gi
        requests:
          cpu: 4
          memory: 9Gi
  annotations:
    testgrid-dashboards: sig-network-kind, sig-testing-kind
    testgrid-tab-name: sig-network-kind, IPv6, master [non-serial]
    description: Runs network tests using KIND against latest kubernetes master with an IPv6 kubernetes-in-docker cluster, skipping [Serial] tests
    testgrid-alert-email: antonio.ojea.garcia@gmail.com, kubernetes-sig-network-test-failures@googlegroups.com
    testgrid-num-columns-recent: '3'
- interval: 6h
  name: ci-kubernetes-kind-multizone
  cluster: k8s-infra-prow-build
  decorate: true
  labels:
    preset-service-account: "true"
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  - org: kubernetes
    repo: test-infra
    base_ref: master
    path_alias: "k8s.io/test-infra"
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/krte:v20220804-9dd62ce78a-master
      command:
      - wrapper.sh
      - bash
      - -c
      - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && $GOPATH/src/k8s.io/test-infra/experiment/kind-multizone-e2e.sh
      env:
      - name: PARALLEL
        value: "true"
      - name: FOCUS
        value: \[sig-network\]|\[Conformance\]
      - name: SKIP
        value: \[Feature:(Networking-IPv6|Example|Federation|PerformanceDNS|ProxyTerminatingEndpoints)\]|LB.health.check|LoadBalancer|load.balancer|GCE|NetworkPolicy|DualStack
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      resources:
        limits:
          cpu: 4
          memory: 9Gi
        requests:
          cpu: 4
          memory: 9Gi
  annotations:
    testgrid-dashboards: sig-network-kind
    testgrid-tab-name: sig-network-kind, multizone
    description: Runs tests against a Multizone Kubernetes in Docker cluster
    testgrid-alert-email: antonio.ojea.garcia@gmail.com, robertjscott@google.com
# network test against kubernetes master branch with `kind` and kube-proxy detectLocalMode="NodeCIDR"
- interval: 6h
  name: ci-kubernetes-kind-network-detect-local-node-cidr
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
  decorate: true
  decoration_config:
    timeout: 200m
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  - org: kubernetes
    repo: test-infra
    base_ref: master
    path_alias: "k8s.io/test-infra"
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/krte:v20220804-9dd62ce78a-master
      command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && $GOPATH/src/k8s.io/test-infra/experiment/kind-detect-local-e2e.sh
      env:
      # don't retry network tests
      - name: GINKGO_TOLERATE_FLAKES
        value: "n"
      - name: FOCUS
        value: \[sig-network\]|\[Conformance\]
      - name: SKIP
        value: \[Feature:(Networking-IPv6|Example|Federation|PerformanceDNS|ProxyTerminatingEndpoints)\]|LB.health.check|LoadBalancer|load.balancer|GCE|NetworkPolicy|DualStack
      - name: KUBE_PROXY_DETECT_LOCAL_MODE
        value: NodeCIDR
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      resources:
        limits:
          cpu: 4
          memory: 9Gi
        requests:
          cpu: 4
          memory: 9Gi
  annotations:
    testgrid-dashboards: sig-network-kind
    testgrid-tab-name: sig-network-kind, detect-local-node-cidr
    description: Runs network tests using KIND against latest kubernetes master with a kubernetes-in-docker cluster and kube-proxy detectLocalMode=NodeCIDR
    testgrid-alert-email: antonio.ojea.garcia@gmail.com, widaly@microsoft.com
# network test against kubernetes master branch with `kind` and kube-proxy detectLocalMode="InterfaceNamePrefix"
- interval: 6h
  name: ci-kubernetes-kind-network-detect-local-interface-name-prefix
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
  decorate: true
  decoration_config:
    timeout: 200m
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  - org: kubernetes
    repo: test-infra
    base_ref: master
    path_alias: "k8s.io/test-infra"
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/krte:v20220804-9dd62ce78a-master
      command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && $GOPATH/src/k8s.io/test-infra/experiment/kind-detect-local-e2e.sh
      env:
      # don't retry network tests
      - name: GINKGO_TOLERATE_FLAKES
        value: "n"
      - name: FOCUS
        value: \[sig-network\]|\[Conformance\]
      - name: SKIP
        value: \[Feature:(Networking-IPv6|Example|Federation|PerformanceDNS|ProxyTerminatingEndpoints)\]|LB.health.check|LoadBalancer|load.balancer|GCE|NetworkPolicy|DualStack
      - name: KUBE_PROXY_DETECT_LOCAL_MODE
        value: InterfaceNamePrefix
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      resources:
        limits:
          cpu: 4
          memory: 9Gi
        requests:
          cpu: 4
          memory: 9Gi
  annotations:
    testgrid-dashboards: sig-network-kind
    testgrid-tab-name: sig-network-kind, detect-local-interface-name-prefix
    description: Runs network tests using KIND against latest kubernetes master with a kubernetes-in-docker cluster and kube-proxy detectLocalMode=InterfaceNamePrefix
    testgrid-alert-email: antonio.ojea.garcia@gmail.com, widaly@microsoft.com
