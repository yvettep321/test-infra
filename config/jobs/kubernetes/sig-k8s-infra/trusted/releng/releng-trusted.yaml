postsubmits:
  kubernetes/k8s.io:
  - name: post-k8sio-file-promo
    cluster: k8s-infra-prow-build-trusted
    decorate: true
    run_if_changed: '^artifacts\/(filestores|manifests)\/.*\/*.yaml'
    # Never run more than 1 job at a time. This is because we don't want to run
    # into a case where an older manifest PR merge gets run last (after a newer
    # one).
    max_concurrency: 1
    branches:
    - ^main$
    spec:
      serviceAccountName: k8s-infra-promoter
      containers:
      - image: registry.k8s.io/artifact-promoter/kpromo:v3.4.4-1
        command:
        - /kpromo
        args:
        - run
        - files
        - --manifests=/home/prow/go/src/github.com/kubernetes/k8s.io/artifacts/
        - --confirm
    annotations:
      testgrid-dashboards: sig-release-releng-blocking, sig-k8s-infra-k8sio
      testgrid-alert-email: k8s-infra-alerts@kubernetes.io, release-managers+alerts@kubernetes.io
      testgrid-num-failures-to-alert: '2'
  - name: post-k8sio-image-promo
    cluster: k8s-infra-prow-build-trusted
    decorate: true
    decoration_config:
      timeout: 4h
    run_if_changed: 'k8s.gcr.io/((images/.*/images\.yaml)|(manifests/.*/promoter-manifest\.yaml))'
    # Never run more than 1 job at a time. This is because we don't want to run
    # into a case where an older manifest PR merge gets run last (after a newer
    # one).
    max_concurrency: 1
    branches:
    - ^main$
    spec:
      serviceAccountName: k8s-infra-gcr-promoter
      containers:
      - image: registry.k8s.io/artifact-promoter/kpromo:v3.4.4-1
        command:
        - /kpromo
        args:
        - cip
        - --thin-manifest-dir=/home/prow/go/src/github.com/kubernetes/k8s.io/k8s.gcr.io
        - --confirm
      resources:
        requests:
          cpu: 2
          memory: "4Gi"
        limits:
          cpu: 2
          memory: "4Gi"
    annotations:
      testgrid-dashboards: sig-release-releng-blocking, sig-k8s-infra-k8sio
      testgrid-alert-email: k8s-infra-alerts@kubernetes.io, release-managers+alerts@kubernetes.io
      testgrid-num-failures-to-alert: '2'

  kubernetes-sigs/promo-tools:
  # This job is a canary job to test promoting the image promoter before
  # rolling changes out to production instances
  - name: post-promo-tools-image-promo-canary
    cluster: k8s-infra-prow-build-trusted
    decorate: true
    run_if_changed: 'canary/((images/.*/images\.yaml)|(manifests/.*/promoter-manifest\.yaml))'
    # Never run more than 1 job at a time. This is because we don't want to run
    # into a case where an older manifest PR merge gets run last (after a newer
    # one).
    max_concurrency: 1
    branches:
    - ^main$
    spec:
      serviceAccountName: k8s-infra-gcr-promoter
      containers:
      - image: gcr.io/k8s-staging-artifact-promoter/kpromo:latest-canary
        imagePullPolicy: Always
        command:
        - /kpromo
        args:
        - cip
        - --thin-manifest-dir=/home/prow/go/src/github.com/kubernetes-sigs/promo-tools/canary
        - --confirm
    annotations:
      testgrid-dashboards: sig-release-releng-informing
      testgrid-alert-email: release-managers+alerts@kubernetes.io
      testgrid-num-failures-to-alert: '2'

periodics:
- interval: 1h
  cluster: k8s-infra-prow-build-trusted
  max_concurrency: 1
  name: ci-k8sio-file-promo
  decorate: true
  extra_refs:
  - org: kubernetes
    repo: k8s.io
    base_ref: main
  spec:
    serviceAccountName: k8s-infra-promoter
    containers:
    - image: registry.k8s.io/artifact-promoter/kpromo:v3.4.4-1
      command:
      - /kpromo
      args:
      - run
      - files
      - --manifests=/home/prow/go/src/github.com/kubernetes/k8s.io/artifacts/
      - --confirm
  annotations:
    testgrid-dashboards: sig-release-releng-blocking, sig-k8s-infra-k8sio
    testgrid-alert-email: k8s-infra-alerts@kubernetes.io, release-managers+alerts@kubernetes.io
    testgrid-num-failures-to-alert: '2'
  rerun_auth_config:
    github_team_slugs:
      - org: kubernetes
        slug: release-managers

# ci-k8sio-image-promo runs every 1 hour, to make sure that the destination
# GCRs do not deviate away from the intent of the manifest.
- interval: 1h
  cluster: k8s-infra-prow-build-trusted
  max_concurrency: 1
  # This name is the "job name", passed in as "--job=NAME" for mkpj.
  name: ci-k8sio-image-promo
  # Enable Pod Utilities.
  # See https://git.k8s.io/test-infra/prow/pod-utilities.md.
  decorate: true
  extra_refs:
  # We clone the below repo automatically (via Pod Utilities), and get dropped
  # into /home/prow/go/src/github.com/kubernetes/k8s.io.
  - org: kubernetes
    repo: k8s.io
    base_ref: main
  spec:
    # The k8s-artifacts-prod name was chosen in
    # https://github.com/kubernetes/k8s.io/pull/695.
    serviceAccountName: k8s-infra-gcr-promoter
    containers:
    - image: registry.k8s.io/artifact-promoter/kpromo:v3.4.4-1
      command:
      - /kpromo
      args:
      - cip
      - --thin-manifest-dir=/home/prow/go/src/github.com/kubernetes/k8s.io/k8s.gcr.io
      - --confirm
  annotations:
    testgrid-dashboards: sig-release-releng-blocking, sig-k8s-infra-k8sio
    testgrid-alert-email: k8s-infra-alerts@kubernetes.io, release-managers+alerts@kubernetes.io
    testgrid-num-failures-to-alert: '2'
  rerun_auth_config:
    github_team_slugs:
      - org: kubernetes
        slug: release-managers

# This job is a canary job to test promoting the image promoter before
# rolling changes out to production instances
- interval: 1h
  cluster: k8s-infra-prow-build-trusted
  max_concurrency: 1
  name: ci-promo-tools-image-promo-canary
  decorate: true
  extra_refs:
  - org: kubernetes-sigs
    repo: promo-tools
    base_ref: main
  spec:
    serviceAccountName: k8s-infra-gcr-promoter
    containers:
    - image: gcr.io/k8s-staging-artifact-promoter/kpromo:latest-canary
      imagePullPolicy: Always
      command:
      - /kpromo
      args:
      - cip
      - --thin-manifest-dir=/home/prow/go/src/github.com/kubernetes-sigs/promo-tools/canary
      - --confirm
  annotations:
    testgrid-dashboards: sig-release-releng-informing
    testgrid-alert-email: release-managers+alerts@kubernetes.io
    testgrid-num-failures-to-alert: '2'
  rerun_auth_config:
    github_team_slugs:
      - org: kubernetes
        slug: release-managers

- interval: 4h
  cluster: k8s-infra-prow-build-trusted
  max_concurrency: 1
  name: ci-k8sio-gcr-prod-backup
  decorate: true
  extra_refs:
  - org: kubernetes
    repo: k8s.io
    base_ref: main
  spec:
    serviceAccountName: k8s-infra-gcr-promoter-bak
    containers:
    - image: gcr.io/k8s-staging-releng/releng-ci:latest-go1.18-bullseye
      imagePullPolicy: Always
      command:
      - infra/gcp/bash/backup_tools/backup.sh
      env:
      # The backup script needs GOPATH to be explicitly defined.
      - name: GOPATH
        value: /go
  annotations:
    testgrid-dashboards: sig-release-releng-blocking
    testgrid-alert-email: k8s-infra-alerts@kubernetes.io, release-managers+alerts@kubernetes.io
    testgrid-num-failures-to-alert: '2'
  rerun_auth_config:
    github_team_slugs:
      - org: kubernetes
        slug: release-managers

- interval: 6h
  name: ci-fast-forward
  cluster: k8s-infra-prow-build-trusted
  decorate: true
  spec:
    serviceAccountName: gcb-builder
    containers:
    - image: gcr.io/k8s-staging-releng/k8s-ci-builder:latest-default
      imagePullPolicy: Always
      command:
      - wrapper.sh
      - /krel
      - fast-forward
      - --non-interactive
      - --submit
      - --nomock
      resources:
        requests:
          cpu: 4
          memory: "8Gi"
        limits:
          cpu: 4
          memory: "8Gi"
  rerun_auth_config:
    github_team_slugs:
      - org: kubernetes
        slug: release-managers
  annotations:
    testgrid-alert-email: release-managers+alerts@kubernetes.io
    testgrid-dashboards: sig-release-releng-blocking
    testgrid-tab-name: git-repo-kubernetes-fast-forward
