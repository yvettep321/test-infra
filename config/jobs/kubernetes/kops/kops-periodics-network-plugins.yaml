# Test jobs generated by build_jobs.py (do not manually edit)
# 9 jobs, total of 189 runs per week
periodics:

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": null, "networking": "amazonvpc"}
- name: e2e-kops-aws-cni-amazon-vpc
  cron: '15 3-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=amazonvpc --container-runtime=containerd --node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: amazonvpc
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-stable, kops-latest, kops-network-plugins, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-cni-amazon-vpc

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-aws-cni-calico
  cron: '16 7-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=containerd --node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-stable, kops-latest, kops-network-plugins, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-cni-calico

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": null, "networking": "canal"}
- name: e2e-kops-aws-cni-canal
  cron: '44 6-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=canal --container-runtime=containerd --node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: canal
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-stable, kops-latest, kops-network-plugins, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-cni-canal

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-aws-cni-cilium
  cron: '58 5-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=containerd --node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-stable, kops-latest, kops-network-plugins, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-cni-cilium

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-aws-cni-cilium-etcd
  cron: '54 3-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=containerd --node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-stable, kops-latest, kops-network-plugins, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-cni-cilium-etcd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-aws-cni-flannel
  cron: '13 7-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=containerd --node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-stable, kops-latest, kops-network-plugins, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-cni-flannel

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-aws-cni-kopeio
  cron: '13 2-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=containerd --node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-stable, kops-latest, kops-network-plugins, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-cni-kopeio

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": null, "networking": "kube-router"}
- name: e2e-kops-aws-cni-kuberouter
  cron: '31 7-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kube-router --container-runtime=containerd --node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kube-router
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-stable, kops-latest, kops-network-plugins, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-cni-kuberouter

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "weave"}
- name: e2e-kops-aws-cni-weave
  cron: '46 4-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=weave --container-runtime=containerd --node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --node-size=t3.large --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: weave
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-1.22, kops-latest, kops-network-plugins, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-cni-weave
