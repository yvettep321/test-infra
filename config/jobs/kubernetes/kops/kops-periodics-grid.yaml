# Test jobs generated by build_jobs.py (do not manually edit)
# 499 jobs, total of 1183 runs per week
periodics:

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k22-docker
  cron: '14 8 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k22-ko23-docker
  cron: '26 17 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k22-ko24-docker
  cron: '11 16 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k23-docker
  cron: '4 6 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k23-ko23-docker
  cron: '47 20 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k23-ko24-docker
  cron: '6 5 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k22-docker
  cron: '10 0 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k22-ko23-docker
  cron: '21 22 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k22-ko24-docker
  cron: '48 23 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k23-docker
  cron: '24 6 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k23-ko23-docker
  cron: '48 11 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k23-ko24-docker
  cron: '9 18 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k22-docker
  cron: '54 4 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k22-ko23-docker
  cron: '41 9 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k22-ko24-docker
  cron: '28 16 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k23-docker
  cron: '0 2 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k23-ko23-docker
  cron: '36 12 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k23-ko24-docker
  cron: '37 21 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k22-docker
  cron: '17 7 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k22-ko23-docker
  cron: '0 15 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k22-ko24-docker
  cron: '57 6 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k23-docker
  cron: '31 9 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k23-ko23-docker
  cron: '45 18 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k23-ko24-docker
  cron: '32 19 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k22-docker
  cron: '15 21 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k22-ko23-docker
  cron: '34 9 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k22-ko24-docker
  cron: '15 16 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k23-docker
  cron: '29 3 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k23-ko23-docker
  cron: '23 4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k23-ko24-docker
  cron: '54 21 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k22-docker
  cron: '2 16 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k22-ko23-docker
  cron: '47 0 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k22-ko24-docker
  cron: '22 1 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k23-docker
  cron: '8 6 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k23-ko23-docker
  cron: '54 21 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k23-ko24-docker
  cron: '35 4 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k22-docker
  cron: '4 0 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k22-ko23-docker
  cron: '20 19 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k22-ko24-docker
  cron: '53 10 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k23-docker
  cron: '2 22 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k23-ko23-docker
  cron: '9 6 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k23-ko24-docker
  cron: '36 15 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k22-docker
  cron: '24 8 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k22-ko23-docker
  cron: '19 20 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k22-ko24-docker
  cron: '38 13 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k23-docker
  cron: '22 6 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k23-ko23-docker
  cron: '22 9 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k23-ko24-docker
  cron: '19 16 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k22-docker
  cron: '16 18 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=calico --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k22-ko23-docker
  cron: '27 3 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=calico --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k22-ko24-docker
  cron: '58 10 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=calico --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k23-docker
  cron: '6 4 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=calico --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k23-ko23-docker
  cron: '54 6 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=calico --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k23-ko24-docker
  cron: '47 23 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=calico --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k22-docker
  cron: '7 23 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k22-ko23-docker
  cron: '50 5 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k22-ko24-docker
  cron: '39 12 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k23-docker
  cron: '41 9 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k23-ko23-docker
  cron: '3 16 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k23-ko24-docker
  cron: '26 17 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k22-docker
  cron: '1 21 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k22-ko23-docker
  cron: '44 3 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k22-ko24-docker
  cron: '53 18 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k23-docker
  cron: '39 11 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k23-ko23-docker
  cron: '53 14 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k23-ko24-docker
  cron: '36 7 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k22-docker
  cron: '24 8 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k22-ko23-docker
  cron: '9 2 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k22-ko24-docker
  cron: '20 11 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k23-docker
  cron: '58 14 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k23-ko23-docker
  cron: '8 15 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k23-ko24-docker
  cron: '45 22 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k22-docker
  cron: '26 18 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k22-ko23-docker
  cron: '42 5 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k22-ko24-docker
  cron: '39 4 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k23-docker
  cron: '36 4 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k23-ko23-docker
  cron: '35 16 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k23-ko24-docker
  cron: '54 17 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k22-docker
  cron: '14 18 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k22-ko23-docker
  cron: '49 18 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k22-ko24-docker
  cron: '44 3 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k23-docker
  cron: '56 4 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k23-ko23-docker
  cron: '4 15 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k23-ko24-docker
  cron: '9 6 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k22-docker
  cron: '44 10 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k22-ko23-docker
  cron: '25 13 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k22-ko24-docker
  cron: '20 20 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k23-docker
  cron: '38 20 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k23-ko23-docker
  cron: '28 8 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k23-ko24-docker
  cron: '1 17 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k22-docker
  cron: '41 13 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k22-ko23-docker
  cron: '36 19 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k22-ko24-docker
  cron: '1 18 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k23-docker
  cron: '39 11 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k23-ko23-docker
  cron: '21 22 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k23-ko24-docker
  cron: '52 7 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k22-docker
  cron: '35 15 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k22-ko23-docker
  cron: '6 21 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k22-ko24-docker
  cron: '39 20 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k23-docker
  cron: '53 9 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k23-ko23-docker
  cron: '27 8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k23-ko24-docker
  cron: '2 17 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k22-docker
  cron: '14 2 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k22-ko23-docker
  cron: '19 20 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k22-ko24-docker
  cron: '54 13 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k23-docker
  cron: '4 12 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k23-ko23-docker
  cron: '46 17 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k23-ko24-docker
  cron: '15 16 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k22-docker
  cron: '36 15 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k22-ko23-docker
  cron: '46 4 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k22-ko24-docker
  cron: '7 13 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k23-docker
  cron: '26 9 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k23-ko23-docker
  cron: '43 17 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k23-ko24-docker
  cron: '38 8 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k22-docker
  cron: '16 15 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k22-ko23-docker
  cron: '53 11 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k22-ko24-docker
  cron: '8 10 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k23-docker
  cron: '6 17 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k23-ko23-docker
  cron: '4 6 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k23-ko24-docker
  cron: '17 15 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k22-docker
  cron: '49 1 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k22-ko23-docker
  cron: '7 6 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k22-ko24-docker
  cron: '14 7 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k23-docker
  cron: '51 15 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k23-ko23-docker
  cron: '22 3 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k23-ko24-docker
  cron: '11 10 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k22-docker
  cron: '39 16 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k22-ko23-docker
  cron: '56 10 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k22-ko24-docker
  cron: '45 19 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k23-docker
  cron: '17 22 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k23-ko23-docker
  cron: '25 7 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k23-ko24-docker
  cron: '8 22 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k22-docker
  cron: '17 10 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k22-ko23-docker
  cron: '18 4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k22-ko24-docker
  cron: '35 21 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k23-docker
  cron: '31 4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k23-ko23-docker
  cron: '3 17 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k23-ko24-docker
  cron: '10 16 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k22-docker
  cron: '40 23 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k22-ko23-docker
  cron: '43 13 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k22-ko24-docker
  cron: '22 4 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k23-docker
  cron: '38 17 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k23-ko23-docker
  cron: '14 8 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k23-ko24-docker
  cron: '3 17 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k22-docker
  cron: '5 14 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k22-ko23-docker
  cron: '0 11 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k22-ko24-docker
  cron: '25 18 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k23-docker
  cron: '39 8 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k23-ko23-docker
  cron: '5 6 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k23-ko24-docker
  cron: '36 7 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k22-docker
  cron: '41 14 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k22-ko23-docker
  cron: '35 20 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k22-ko24-docker
  cron: '30 13 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k23-docker
  cron: '19 8 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k23-ko23-docker
  cron: '26 17 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k23-ko24-docker
  cron: '43 0 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k22-docker
  cron: '42 19 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=flannel --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k22-ko23-docker
  cron: '52 20 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=flannel --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k22-ko24-docker
  cron: '13 13 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=flannel --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k23-docker
  cron: '48 13 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=flannel --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k23-ko23-docker
  cron: '53 1 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=flannel --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k23-ko24-docker
  cron: '48 8 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=flannel --container-runtime=docker" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k22-docker
  cron: '54 17 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k22-ko23-docker
  cron: '18 21 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k22-ko24-docker
  cron: '43 20 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k23-docker
  cron: '48 7 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k23-ko23-docker
  cron: '19 16 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k23-ko24-docker
  cron: '2 9 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k22-docker
  cron: '24 11 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k22-ko23-docker
  cron: '16 11 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k22-ko24-docker
  cron: '29 10 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k23-docker
  cron: '14 13 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k23-ko23-docker
  cron: '49 22 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k23-ko24-docker
  cron: '24 15 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k22-docker
  cron: '53 6 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k22-ko23-docker
  cron: '13 2 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k22-ko24-docker
  cron: '20 11 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k23-docker
  cron: '55 0 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k23-ko23-docker
  cron: '36 15 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k23-ko24-docker
  cron: '21 14 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k22-docker
  cron: '52 16 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k22-ko23-docker
  cron: '54 9 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k22-ko24-docker
  cron: '51 8 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k23-docker
  cron: '30 22 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k23-ko23-docker
  cron: '35 4 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k23-ko24-docker
  cron: '26 21 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k22-docker
  cron: '4 0 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k22-ko23-docker
  cron: '45 6 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k22-ko24-docker
  cron: '28 7 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k23-docker
  cron: '22 14 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k23-ko23-docker
  cron: '40 3 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k23-ko24-docker
  cron: '1 18 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k22-docker
  cron: '59 7 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k22-ko23-docker
  cron: '56 23 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k22-ko24-docker
  cron: '13 6 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k23-docker
  cron: '17 17 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k23-ko23-docker
  cron: '53 18 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k23-ko24-docker
  cron: '44 19 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k22-docker
  cron: '29 21 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k22-ko23-docker
  cron: '30 1 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k22-ko24-docker
  cron: '43 8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k23-docker
  cron: '47 3 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k23-ko23-docker
  cron: '43 12 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k23-ko24-docker
  cron: '26 13 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k22-docker
  cron: '56 0 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k22-ko23-docker
  cron: '55 8 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k22-ko24-docker
  cron: '10 9 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k23-docker
  cron: '50 22 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k23-ko23-docker
  cron: '14 5 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k23-ko24-docker
  cron: '51 20 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k22-containerd
  cron: '8 1 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k22-ko23-containerd
  cron: '39 13 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k22-ko24-containerd
  cron: '40 2 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k23-containerd
  cron: '47 14 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k23-ko23-containerd
  cron: '32 6 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k23-ko24-containerd
  cron: '11 17 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k24-containerd
  cron: '4 1 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k24-ko24-containerd
  cron: '48 2 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k22-containerd
  cron: '33 8 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k22-ko23-containerd
  cron: '29 7 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k22-ko24-containerd
  cron: '2 0 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k23-containerd
  cron: '26 7 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k23-ko23-containerd
  cron: '30 4 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k23-ko24-containerd
  cron: '5 11 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k24-containerd
  cron: '21 16 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k24-ko24-containerd
  cron: '38 8 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k22-containerd
  cron: '13 18 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k22-ko23-containerd
  cron: '42 18 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k22-ko24-containerd
  cron: '17 21 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k23-containerd
  cron: '26 13 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k23-ko23-containerd
  cron: '1 9 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k23-ko24-containerd
  cron: '34 14 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k24-containerd
  cron: '45 2 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k24-ko24-containerd
  cron: '13 13 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k22-containerd
  cron: '2 7 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k22-ko23-containerd
  cron: '13 23 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k22-ko24-containerd
  cron: '34 8 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k23-containerd
  cron: '21 0 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k23-ko23-containerd
  cron: '30 20 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k23-ko24-containerd
  cron: '45 3 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k24-containerd
  cron: '22 15 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k24-ko24-containerd
  cron: '14 16 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k22-containerd
  cron: '4 5 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k22-ko23-containerd
  cron: '4 6 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k22-ko24-containerd
  cron: '47 9 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k23-containerd
  cron: '19 2 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k23-ko23-containerd
  cron: '23 13 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k23-ko24-containerd
  cron: '56 18 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k24-containerd
  cron: '12 21 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k24-ko24-containerd
  cron: '11 17 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k22-containerd
  cron: '27 22 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k22-ko23-containerd
  cron: '17 23 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k22-ko24-containerd
  cron: '10 16 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k23-containerd
  cron: '48 1 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k23-ko23-containerd
  cron: '26 4 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k23-ko24-containerd
  cron: '49 19 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k24-containerd
  cron: '23 22 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k24-ko24-containerd
  cron: '50 0 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k22-containerd
  cron: '44 4 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k22-ko23-containerd
  cron: '30 8 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k22-ko24-containerd
  cron: '21 23 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k23-containerd
  cron: '23 19 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k23-ko23-containerd
  cron: '1 3 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k23-ko24-containerd
  cron: '6 20 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k24-containerd
  cron: '52 4 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k24-ko24-containerd
  cron: '41 15 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k22-containerd
  cron: '17 13 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k22-ko23-containerd
  cron: '28 2 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k22-ko24-containerd
  cron: '47 5 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k23-containerd
  cron: '22 2 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k23-ko23-containerd
  cron: '35 9 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k23-ko24-containerd
  cron: '4 14 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k24-containerd
  cron: '49 21 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k24-ko24-containerd
  cron: '19 13 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k22-containerd
  cron: '14 13 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=calico --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k22-ko23-containerd
  cron: '57 8 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=calico --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k22-ko24-containerd
  cron: '54 15 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=calico --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k23-containerd
  cron: '57 18 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=calico --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k23-ko23-containerd
  cron: '26 19 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=calico --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k23-ko24-containerd
  cron: '21 12 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=calico --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k24-containerd
  cron: '58 13 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=calico --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k24-ko24-containerd
  cron: '26 7 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=calico --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k22-containerd
  cron: '38 18 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k22-ko23-containerd
  cron: '16 10 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k22-ko24-containerd
  cron: '19 21 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k23-containerd
  cron: '53 21 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k23-ko23-containerd
  cron: '7 17 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k23-ko24-containerd
  cron: '16 22 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k24-containerd
  cron: '26 10 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k24-ko24-containerd
  cron: '31 5 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k22-containerd
  cron: '28 16 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k22-ko23-containerd
  cron: '25 3 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k22-ko24-containerd
  cron: '34 12 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k23-containerd
  cron: '3 23 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k23-ko23-containerd
  cron: '14 8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k23-ko24-containerd
  cron: '37 7 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k24-containerd
  cron: '12 8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k24-ko24-containerd
  cron: '10 4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k22-containerd
  cron: '11 11 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k22-ko23-containerd
  cron: '28 10 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k22-ko24-containerd
  cron: '3 13 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k23-containerd
  cron: '24 12 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k23-ko23-containerd
  cron: '27 17 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k23-ko24-containerd
  cron: '12 22 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k24-containerd
  cron: '27 19 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k24-ko24-containerd
  cron: '31 13 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k22-containerd
  cron: '6 22 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k22-ko23-containerd
  cron: '6 12 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k22-ko24-containerd
  cron: '25 3 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k23-containerd
  cron: '29 17 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k23-ko23-containerd
  cron: '1 23 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k23-ko24-containerd
  cron: '54 8 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k24-containerd
  cron: '26 22 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k24-ko24-containerd
  cron: '49 19 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k22-containerd
  cron: '31 7 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k22-ko23-containerd
  cron: '32 22 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k22-ko24-containerd
  cron: '35 1 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k23-containerd
  cron: '56 0 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k23-ko23-containerd
  cron: '43 21 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k23-ko24-containerd
  cron: '40 18 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k24-containerd
  cron: '15 15 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k24-ko24-containerd
  cron: '15 9 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k22-containerd
  cron: '29 18 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k22-ko23-containerd
  cron: '22 3 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k22-ko24-containerd
  cron: '37 12 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k23-containerd
  cron: '46 5 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k23-ko23-containerd
  cron: '45 0 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k23-ko24-containerd
  cron: '14 23 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k24-containerd
  cron: '29 10 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k24-ko24-containerd
  cron: '17 4 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k22-containerd
  cron: '12 0 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k22-ko23-containerd
  cron: '8 22 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k22-ko24-containerd
  cron: '11 1 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k23-containerd
  cron: '51 15 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k23-ko23-containerd
  cron: '31 5 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k23-ko24-containerd
  cron: '32 10 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k24-containerd
  cron: '44 8 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k24-ko24-containerd
  cron: '3 1 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k22-containerd
  cron: '2 10 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k22-ko23-containerd
  cron: '25 23 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k22-ko24-containerd
  cron: '22 16 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k23-containerd
  cron: '17 21 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k23-ko23-containerd
  cron: '2 20 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k23-ko24-containerd
  cron: '57 3 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k24-containerd
  cron: '54 2 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k24-ko24-containerd
  cron: '54 0 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k22-containerd
  cron: '41 9 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k22-ko23-containerd
  cron: '20 14 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k22-ko24-containerd
  cron: '19 17 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k23-containerd
  cron: '10 6 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k23-ko23-containerd
  cron: '3 13 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k23-ko24-containerd
  cron: '24 2 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k24-containerd
  cron: '17 17 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k24-ko24-containerd
  cron: '43 9 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k22-containerd
  cron: '4 10 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k22-ko23-containerd
  cron: '58 20 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k22-ko24-containerd
  cron: '57 19 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k23-containerd
  cron: '3 21 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k23-ko23-containerd
  cron: '17 23 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k23-ko24-containerd
  cron: '18 16 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k24-containerd
  cron: '20 18 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k24-ko24-containerd
  cron: '17 19 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k22-containerd
  cron: '17 3 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k22-ko23-containerd
  cron: '44 14 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k22-ko24-containerd
  cron: '39 9 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k23-containerd
  cron: '54 12 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k23-ko23-containerd
  cron: '47 5 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k23-ko24-containerd
  cron: '8 10 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k24-containerd
  cron: '37 11 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k24-ko24-containerd
  cron: '11 1 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k22-containerd
  cron: '57 12 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k22-ko23-containerd
  cron: '56 5 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k22-ko24-containerd
  cron: '35 2 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k23-containerd
  cron: '38 11 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k23-ko23-containerd
  cron: '51 14 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k23-ko24-containerd
  cron: '4 9 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k24-containerd
  cron: '33 20 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k24-ko24-containerd
  cron: '15 18 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k22-containerd
  cron: '58 20 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k22-ko23-containerd
  cron: '24 6 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k22-ko24-containerd
  cron: '43 17 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k23-containerd
  cron: '41 11 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k23-ko23-containerd
  cron: '51 21 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k23-ko24-containerd
  cron: '28 10 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k24-containerd
  cron: '26 12 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k24-ko24-containerd
  cron: '7 17 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k22-containerd
  cron: '0 22 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k22-ko23-containerd
  cron: '13 7 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k22-ko24-containerd
  cron: '42 16 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k23-containerd
  cron: '15 9 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k23-ko23-containerd
  cron: '14 20 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k23-ko24-containerd
  cron: '9 11 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k24-containerd
  cron: '0 6 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k24-ko24-containerd
  cron: '18 16 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k22-containerd
  cron: '19 21 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k22-ko23-containerd
  cron: '12 22 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k22-ko24-containerd
  cron: '31 17 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k23-containerd
  cron: '44 2 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k23-ko23-containerd
  cron: '51 13 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k23-ko24-containerd
  cron: '8 2 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k24-containerd
  cron: '59 21 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k24-ko24-containerd
  cron: '59 9 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k22-containerd
  cron: '12 15 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k22-ko23-containerd
  cron: '13 19 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k22-ko24-containerd
  cron: '14 4 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k23-containerd
  cron: '11 16 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k23-ko23-containerd
  cron: '22 8 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k23-ko24-containerd
  cron: '49 7 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k24-containerd
  cron: '4 7 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k24-ko24-containerd
  cron: '10 12 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k22-containerd
  cron: '33 22 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k22-ko23-containerd
  cron: '43 17 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k22-ko24-containerd
  cron: '32 22 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k23-containerd
  cron: '14 1 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k23-ko23-containerd
  cron: '36 10 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k23-ko24-containerd
  cron: '35 5 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k24-containerd
  cron: '45 14 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k24-ko24-containerd
  cron: '28 22 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k22-containerd
  cron: '5 13 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k22-ko23-containerd
  cron: '43 2 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k22-ko24-containerd
  cron: '4 5 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k23-containerd
  cron: '46 18 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k23-ko23-containerd
  cron: '48 9 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k23-ko24-containerd
  cron: '27 22 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k24-containerd
  cron: '25 21 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k24-ko24-containerd
  cron: '52 13 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3277.1.1-hvm' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --control-plane-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --node-instance-group-overrides="spec.instanceMetadata.httpTokens=optional" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k22-containerd
  cron: '18 17 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k22-ko23-containerd
  cron: '3 17 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k22-ko24-containerd
  cron: '12 6 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k23-containerd
  cron: '33 14 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k23-ko23-containerd
  cron: '32 10 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k23-ko24-containerd
  cron: '47 5 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k24-containerd
  cron: '42 1 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k24-ko24-containerd
  cron: '52 6 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k22-containerd
  cron: '12 3 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k22-ko23-containerd
  cron: '6 0 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k22-ko24-containerd
  cron: '33 15 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k23-containerd
  cron: '55 12 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k23-ko23-containerd
  cron: '1 19 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k23-ko24-containerd
  cron: '30 12 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k24-containerd
  cron: '24 3 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k24-ko24-containerd
  cron: '17 23 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k22-containerd
  cron: '35 0 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k22-ko23-containerd
  cron: '3 1 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k22-ko24-containerd
  cron: '48 6 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k23-containerd
  cron: '24 7 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k23-ko23-containerd
  cron: '20 18 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k23-ko24-containerd
  cron: '39 5 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k24-containerd
  cron: '19 0 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k24-ko24-containerd
  cron: '16 14 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k22-containerd
  cron: '47 15 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k22-ko23-containerd
  cron: '46 8 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k22-ko24-containerd
  cron: '49 15 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k23-containerd
  cron: '44 16 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k23-ko23-containerd
  cron: '41 11 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k23-ko24-containerd
  cron: '18 4 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k24-containerd
  cron: '59 7 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k24-ko24-containerd
  cron: '21 23 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='amazon/amzn2-ami-kernel-5.10-hvm-2.0.20220719.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k22-containerd
  cron: '50 14 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k22-ko23-containerd
  cron: '20 10 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k22-ko24-containerd
  cron: '47 5 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k23-containerd
  cron: '29 1 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k23-ko23-containerd
  cron: '31 1 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k23-ko24-containerd
  cron: '52 6 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k24-containerd
  cron: '18 6 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k24-ko24-containerd
  cron: '15 5 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220815-1108' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k22-containerd
  cron: '1 9 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k22-ko23-containerd
  cron: '0 10 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k22-ko24-containerd
  cron: '23 21 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k23-containerd
  cron: '6 22 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k23-ko23-containerd
  cron: '23 1 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k23-ko24-containerd
  cron: '44 22 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k24-containerd
  cron: '37 9 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k24-ko24-containerd
  cron: '3 13 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.5.0_HVM-20211103-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k22-containerd
  cron: '55 19 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k22-ko23-containerd
  cron: '53 11 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k22-ko24-containerd
  cron: '34 12 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k23-containerd
  cron: '4 20 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k23-ko23-containerd
  cron: '58 8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k23-ko24-containerd
  cron: '41 23 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k24-containerd
  cron: '59 11 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k24-ko24-containerd
  cron: '46 20 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k24-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k22-containerd
  cron: '0 8 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k22-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k22-ko23-containerd
  cron: '40 2 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k22-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k22-ko24-containerd
  cron: '19 5 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k22-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k23-containerd
  cron: '15 23 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k23-ko23-containerd
  cron: '55 1 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k23-ko23-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k23-ko24-containerd
  cron: '52 14 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k23-ko24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k24-containerd
  cron: '56 16 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k24-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k24-ko24-containerd
  cron: '11 13 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220810' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k24-ko24-containerd

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-gce-u2004-k22-containerd
  cron: '49 6-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=kubenet --container-runtime=containerd --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-u2004-k22-containerd

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-gce-u2004-k23-containerd
  cron: '2 1-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=kubenet --container-runtime=containerd --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-u2004-k23-containerd

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-gce-u2004-k24-containerd
  cron: '5 6-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=kubenet --container-runtime=containerd --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-u2004-k24-containerd

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-gce-calico-u2004-k22-containerd
  cron: '41 1-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=calico --container-runtime=containerd --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-calico-u2004-k22-containerd

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-gce-calico-u2004-k23-containerd
  cron: '50 6-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=calico --container-runtime=containerd --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-calico-u2004-k23-containerd

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-gce-calico-u2004-k24-containerd
  cron: '9 1-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=calico --container-runtime=containerd --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-calico-u2004-k24-containerd

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-gce-cilium-u2004-k22-containerd
  cron: '15 3-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=cilium --container-runtime=containerd --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-cilium-u2004-k22-containerd

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-gce-cilium-u2004-k23-containerd
  cron: '4 4-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=cilium --container-runtime=containerd --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-cilium-u2004-k23-containerd

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-gce-cilium-u2004-k24-containerd
  cron: '23 3-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=cilium --container-runtime=containerd --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20220812-a0f1ed2b84-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-cilium-u2004-k24-containerd
